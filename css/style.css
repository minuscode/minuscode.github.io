@charset "UTF-8";
/*------------------------------------*\
    STYLE.CSS
\*------------------------------------*/
/**
 *
 * sass --watch style.scss:style.min.css --style compressed
 *
 * Here we pull in some variables, include the inuit.css framework, then add our
 * project-specific components afterwards.
 */
/**
 * Setup
 */
/**
 * Tell inuit.css when breakpoints start.
 */
/*------------------------------------*\
    $FONTS
\*------------------------------------*/
/*------------------------------------*\
    $COLORS
\*------------------------------------*/
/*------------------------------------*\
    $OBJECTS AND ABSTRACTIONS
\*------------------------------------*/
/**
 * Which objects and abstractions would you like to use?
 */
/*------------------------------------*\
    INUIT.CSS
\*------------------------------------*/
/*!*
 *
 * inuitcss.com -- @inuitcss -- @csswizardry
 *
 */
/**
 * inuit.css acts as a base stylesheet which you should extend with your own
 * theme stylesheet.
 *
 * inuit.css aims to do the heavy lifting; sorting objects and abstractions,
 * design patterns and fiddly bits of CSS, whilst leaving as much design as
 * possible to you. inuit.css is the scaffolding to your decorator.
 *
 * This stylesheet is heavily documented and contains lots of comments, please
 * take care to read and refer to them as you build. For further support please
 * tweet at @inuitcss.
 *
 * Owing to the amount of comments please only ever use minified CSS in
 * production. This file is purely a dev document.
 *
 * The table of contents below maps to section titles of the same name, to jump
 * to any section simply run a find for $[SECTION-TITLE].
 *
 * Most objects and abstractions come with a chunk of markup that you should be
 * able to paste into any view to quickly see how the CSS works in conjunction
 * with the correct HTML.
 *
 * inuit.css is written to this standard: github.com/csswizardry/CSS-Guidelines
 *
 * LICENSE
 *
 * Copyright 2013 Harry Roberts
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * Thank you for choosing inuit.css. May your web fonts render perfectly.
 */
/*------------------------------------*\
    $CONTENTS
\*------------------------------------*/
/**
 * CONTENTS............You’re reading it!
 * WARNING.............Here be dragons!
 * IMPORTS.............Begin importing the sections below
 *
 * MIXINS..............Super-simple Sass stuff
 * NORMALIZE...........normalize.css
 * RESET...............Set some defaults
 * CLEARFIX............
 * SHARED..............Shared declarations
 *
 * MAIN................High-level elements like `html`, `body`, etc.
 * HEADINGS............Double-stranded heading hierarchy
 * PARAGRAPHS..........
 * SMALLPRINT..........Smaller text elements like `small`
 * QUOTES..............
 * CODE................
 * LISTS...............
 * IMAGES..............
 * TABLES..............
 * FORMS...............
 *
 * GRIDS...............Fluid, proportional and nestable grids
 * FLEXBOX.............Crudely emulate flexbox
 * COLUMNS.............CSS3 columns
 * NAV.................A simple abstraction to put a list in horizontal nav mode
 * OPTIONS.............Grouped nav items
 * PAGINATION..........Very stripped back, basic paginator
 * BREADCRUMB..........Simple breadcrumb trail object
 * MEDIA...............Media object
 * MARGINALIA..........Simple marginalia content
 * ISLAND..............Boxed off content
 * BLOCK-LIST..........Blocky lists of content
 * MATRIX..............Gridded lists
 * SPLIT...............A simple split-in-two object
 * THIS-OR-THIS........Options object
 * LINK-COMPLEX........
 * FLYOUT..............Flyout-on-hover object
 * ARROWS..............CSS arrows
 * SPRITE..............Generic spriting element
 * ICON-TEXT...........Icon and text couplings
 * BEAUTONS............Use the beautons micro library
 * LOZENGES............Basic lozenge styles
 * RULES...............Horizontal rules
 * STATS...............Simple stats object
 * GREYBOX.............Wireframing styles
 *
 * WIDTHS..............Width classes for use alongside the grid system etc.
 * PUSH................Push classes for manipulating grids
 * PULL................Pull classes for manipulating grids
 * BRAND...............Helper class to apply brand treatment to elements
 * HELPER..............A series of helper classes to use arbitrarily
 * DEBUG...............Enable to add visual flags for debugging purposes
 */
/*------------------------------------*\
    $WARNING
\*------------------------------------*/
/*
 * inuit.css, being an OO framework, works in keeping with the open/closed
 * principle. The variables you set previously are now being used throughout
 * inuit.css to style everything we need for a base. Any custom styles SHOULD
 * NOT be added or modified in inuit.css directly, but added via your theme
 * stylesheet as per the open/closed principle:
 *
 * csswizardry.com/2012/06/the-open-closed-principle-applied-to-css
 *
 * Try not to edit any CSS beyond this point; if you find you need to do so
 * it is a failing of the framework so please tweet at @inuitcss.
 */
/*------------------------------------*\
    $IMPORTS
\*------------------------------------*/
/**
 * Generic utility styles etc.
 */
/*------------------------------------*\
    $DEFAULTS
\*------------------------------------*/
/**
 * inuit.css’ default variables. Redefine these in your `_vars.scss` file (found
 * in the inuit.css-web-template) to override them.
 */
/*------------------------------------*\
    $DEBUG
\*------------------------------------*/
/**
 * Debug mode will visually highlight any potential markup/accessibility quirks
 * in the browser. Set to `true` or `false`.
 */
/*------------------------------------*\
    $BORDER-BOX
\*------------------------------------*/
/**
 * Do you want all elements to adopt `box-sizing:border-box;` as per
 * paulirish.com/2012/box-sizing-border-box-ftw ?
 */
/*------------------------------------*\
    $BASE
\*------------------------------------*/
/**
 * Base stuff
 */
/**
 * Base font-family.
 */
/**
 * Default colour for objects’ borders etc.
 */
/*------------------------------------*\
    $RESPONSIVE
\*------------------------------------*/
/**
 * Responsiveness?
 */
/**
 * Responsiveness for widescreen/high resolution desktop monitors and beyond?
 * Note: `$responsive` variable above must be set to true before enabling this.
 */
/**
 * Responsive push and pull produce a LOT of code, only turn them on if you
 * definitely need them.
 */
/**
 * Note: `$push` variable above must be set to true before enabling these.
 */
/**
 * Note: `$pull` variable above must be set to true before enabling these.
 */
/**
 * Tell inuit.css when breakpoints start.
 */
/*------------------------------------*\
    $FONT-SIZES
\*------------------------------------*/
/**
 * Font-sizes (in pixels). Refer to relevant sections for their implementations.
 */
/*------------------------------------*\
    $QUOTES
\*------------------------------------*/
/**
 * English quote marks?
 */
/**
 * If you want English quotes then please do not edit these; they’re only here
 * because Sass needs them.
 */
/**
 * If you need non-English quotes, please alter the following values accordingly:
 */
/*------------------------------------*\
    $BRAND
\*------------------------------------*/
/**
 * Brand stuff
 */
/**
 * How big would you like round corners to be by default?
 */
/*------------------------------------*\
    $OBJECTS AND ABSTRACTIONS
\*------------------------------------*/
/**
 * Which objects and abstractions would you like to use?
 */
/*------------------------------------*\
    $FRAMEWORK
\*------------------------------------*/
/**
 * inuit.css will work these next ones out for use within the framework.
 *
 * Assign our `$base-line-height` to a new spacing var for more transparency.
 */
/*------------------------------------*\
    $MIXINS
\*------------------------------------*/
/**
 * Create a fully formed type style (sizing and vertical rhythm) by passing in a
 * single value, e.g.:
 *
   `@include font-size(10px);`
 *
 * Thanks to @redclov3r for the `line-height` Sass:
 * twitter.com/redclov3r/status/250301539321798657
 */
/**
 * Style any number of headings in one fell swoop, e.g.:
 *
   .foo{
       @include headings(1, 3){
           color:#BADA55;
       }
    }
 *
 * With thanks to @lar_zzz, @paranoida and @rowanmanning for refining and
 * improving my initial mixin.
 */
/**
 * Create vendor-prefixed CSS in one go, e.g.
 *
   `@include vendor(border-radius, 4px);`
 *
 */
/**
 * Create CSS keyframe animations for all vendors in one go, e.g.:
 *
   .foo{
       @include vendor(animation, shrink 3s);
   }

   @include keyframe(shrink){
       from{
           font-size:5em;
       }
   }
 *
 * Courtesy of @integralist: twitter.com/integralist/status/260484115315437569
 */
/**
 * Force overly long spans of text to truncate, e.g.:
 *
   `@include truncate(100%);`
 *
 * Where `$truncation-boundary` is a united measurement.
 */
/**
 * CSS arrows!!! But... before you read on, you might want to grab a coffee...
 *
 * This mixin creates a CSS arrow on a given element. We can have the arrow
 * appear in one of 12 locations, thus:
 *
 *       01    02    03
 *    +------------------+
 * 12 |                  | 04
 *    |                  |
 * 11 |                  | 05
 *    |                  |
 * 10 |                  | 06
 *    +------------------+
 *       09    08    07
 *
 * You pass this position in along with a desired arrow color and optional
 * border color, for example:
 *
 * `@include arrow(top, left, red)`
 *
 * for just a single, red arrow, or:
 *
 * `@include arrow(bottom, center, red, black)`
 *
 * which will create a red triangle with a black border which sits at the bottom
 * center of the element. Call the mixin thus:
 *
   .foo{
       background-color:#BADA55;
       border:1px solid #ACE;
       @include arrow(top, left, #BADA55, #ACE);
   }
 *
 */
/**
 * Media query mixin.
 *
 * It’s not great practice to define solid breakpoints up-front, preferring to
 * modify your design when it needs it, rather than assuming you’ll want a
 * change at ‘mobile’. However, as inuit.css is required to take a hands off
 * approach to design decisions, this is the closest we can get to baked-in
 * responsiveness. It’s flexible enough to allow you to set your own breakpoints
 * but solid enough to be frameworkified.
 *
 * We define some broad breakpoints in our vars file that are picked up here
 * for use in a simple media query mixin. Our options are:
 *
 * palm
 * lap
 * lap-and-up
 * portable
 * desk
 * desk-wide
 *
 * Not using a media query will, naturally, serve styles to all devices.
 *
 * `@include media-query(palm){ [styles here] }`
 *
 * We work out your end points for you:
 */
/*! normalize.css v2.1.0 | MIT License | git.io/normalize */
/* ==========================================================================
   HTML5 display definitions
   ========================================================================== */
/*
 * Correct `block` display not defined in IE 8/9.
 */
/* line 11, src/inuit.css/generic/_normalize.scss */
article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
main,
nav,
section,
summary {
  display: block;
}

/*
 * Correct `inline-block` display not defined in IE 8/9.
 */
/* line 30, src/inuit.css/generic/_normalize.scss */
audio,
canvas,
video {
  display: inline-block;
}

/*
 * Prevent modern browsers from displaying `audio` without controls.
 * Remove excess height in iOS 5 devices.
 */
/* line 41, src/inuit.css/generic/_normalize.scss */
audio:not([controls]) {
  display: none;
  height: 0;
}

/*
 * Address styling not present in IE 8/9.
 */
/* line 50, src/inuit.css/generic/_normalize.scss */
[hidden] {
  display: none;
}

/* ==========================================================================
   Base
   ========================================================================== */
/*
 * 1. Set default font family to sans-serif.
 * 2. Prevent iOS text size adjust after orientation change, without disabling
 *    user zoom.
 */
/* line 64, src/inuit.css/generic/_normalize.scss */
html {
  font-family: sans-serif;
  /* 1 */
  -webkit-text-size-adjust: 100%;
  /* 2 */
  -ms-text-size-adjust: 100%;
  /* 2 */
}

/*
 * Remove default margin.
 */
/* line 74, src/inuit.css/generic/_normalize.scss */
body {
  margin: 0;
}

/* ==========================================================================
   Links
   ========================================================================== */
/*
 * Address `outline` inconsistency between Chrome and other browsers.
 */
/* line 86, src/inuit.css/generic/_normalize.scss */
a:focus {
  outline: thin dotted;
}

/*
 * Improve readability when focused and also mouse hovered in all browsers.
 */
/* line 94, src/inuit.css/generic/_normalize.scss */
a:active,
a:hover {
  outline: 0;
}

/* ==========================================================================
   Typography
   ========================================================================== */
/*
 * Address variable `h1` font-size and margin within `section` and `article`
 * contexts in Firefox 4+, Safari 5, and Chrome.
 */
/* line 108, src/inuit.css/generic/_normalize.scss */
h1 {
  font-size: 2em;
  margin: 0.67em 0;
}

/*
 * Address styling not present in IE 8/9, Safari 5, and Chrome.
 */
/* line 117, src/inuit.css/generic/_normalize.scss */
abbr[title] {
  border-bottom: 1px dotted;
}

/*
 * Address style set to `bolder` in Firefox 4+, Safari 5, and Chrome.
 */
/* line 125, src/inuit.css/generic/_normalize.scss */
b,
strong {
  font-weight: bold;
}

/*
 * Address styling not present in Safari 5 and Chrome.
 */
/* line 134, src/inuit.css/generic/_normalize.scss */
dfn {
  font-style: italic;
}

/*
 * Address differences between Firefox and other browsers.
 */
/* line 142, src/inuit.css/generic/_normalize.scss */
hr {
  -moz-box-sizing: content-box;
  box-sizing: content-box;
  height: 0;
}

/*
 * Address styling not present in IE 8/9.
 */
/* line 152, src/inuit.css/generic/_normalize.scss */
mark {
  background: #ff0;
  color: #000;
}

/*
 * Correct font family set oddly in Safari 5 and Chrome.
 */
/* line 161, src/inuit.css/generic/_normalize.scss */
code,
kbd,
pre,
samp {
  font-family: monospace, serif;
  font-size: 1em;
}

/*
 * Improve readability of pre-formatted text in all browsers.
 */
/* line 173, src/inuit.css/generic/_normalize.scss */
pre {
  white-space: pre-wrap;
}

/*
 * Set consistent quote types.
 */
/* line 181, src/inuit.css/generic/_normalize.scss */
q {
  quotes: "\201C" "\201D" "\2018" "\2019";
}

/*
 * Address inconsistent and variable font size in all browsers.
 */
/* line 189, src/inuit.css/generic/_normalize.scss */
small {
  font-size: 80%;
}

/*
 * Prevent `sub` and `sup` affecting `line-height` in all browsers.
 */
/* line 197, src/inuit.css/generic/_normalize.scss */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

/* line 205, src/inuit.css/generic/_normalize.scss */
sup {
  top: -0.5em;
}

/* line 209, src/inuit.css/generic/_normalize.scss */
sub {
  bottom: -0.25em;
}

/* ==========================================================================
   Embedded content
   ========================================================================== */
/*
 * Remove border when inside `a` element in IE 8/9.
 */
/* line 221, src/inuit.css/generic/_normalize.scss */
img {
  border: 0;
}

/*
 * Correct overflow displayed oddly in IE 9.
 */
/* line 229, src/inuit.css/generic/_normalize.scss */
svg:not(:root) {
  overflow: hidden;
}

/* ==========================================================================
   Figures
   ========================================================================== */
/*
 * Address margin not present in IE 8/9 and Safari 5.
 */
/* line 241, src/inuit.css/generic/_normalize.scss */
figure {
  margin: 0;
}

/* ==========================================================================
   Forms
   ========================================================================== */
/*
 * Define consistent border, margin, and padding.
 */
/* line 253, src/inuit.css/generic/_normalize.scss */
fieldset {
  border: 1px solid #c0c0c0;
  margin: 0 2px;
  padding: 0.35em 0.625em 0.75em;
}

/*
 * 1. Correct `color` not being inherited in IE 8/9.
 * 2. Remove padding so people aren't caught out if they zero out fieldsets.
 */
/* line 264, src/inuit.css/generic/_normalize.scss */
legend {
  border: 0;
  /* 1 */
  padding: 0;
  /* 2 */
}

/*
 * 1. Correct font family not being inherited in all browsers.
 * 2. Correct font size not being inherited in all browsers.
 * 3. Address margins set differently in Firefox 4+, Safari 5, and Chrome.
 */
/* line 275, src/inuit.css/generic/_normalize.scss */
button,
input,
select,
textarea {
  font-family: inherit;
  /* 1 */
  font-size: 100%;
  /* 2 */
  margin: 0;
  /* 3 */
}

/*
 * Address Firefox 4+ setting `line-height` on `input` using `!important` in
 * the UA stylesheet.
 */
/* line 289, src/inuit.css/generic/_normalize.scss */
button,
input {
  line-height: normal;
}

/*
 * Address inconsistent `text-transform` inheritance for `button` and `select`.
 * All other form control elements do not inherit `text-transform` values.
 * Correct `button` style inheritance in Chrome, Safari 5+, and IE 8+.
 * Correct `select` style inheritance in Firefox 4+ and Opera.
 */
/* line 301, src/inuit.css/generic/_normalize.scss */
button,
select {
  text-transform: none;
}

/*
 * 1. Avoid the WebKit bug in Android 4.0.* where (2) destroys native `audio`
 *    and `video` controls.
 * 2. Correct inability to style clickable `input` types in iOS.
 * 3. Improve usability and consistency of cursor style between image-type
 *    `input` and others.
 */
/* line 314, src/inuit.css/generic/_normalize.scss */
button,
html input[type="button"],
input[type="reset"],
input[type="submit"] {
  -webkit-appearance: button;
  /* 2 */
  cursor: pointer;
  /* 3 */
}

/*
 * Re-set default cursor for disabled elements.
 */
/* line 326, src/inuit.css/generic/_normalize.scss */
button[disabled],
html input[disabled] {
  cursor: default;
}

/*
 * 1. Address box sizing set to `content-box` in IE 8/9.
 * 2. Remove excess padding in IE 8/9.
 */
/* line 336, src/inuit.css/generic/_normalize.scss */
input[type="checkbox"],
input[type="radio"] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */
}

/*
 * 1. Address `appearance` set to `searchfield` in Safari 5 and Chrome.
 * 2. Address `box-sizing` set to `border-box` in Safari 5 and Chrome
 *    (include `-moz` to future-proof).
 */
/* line 348, src/inuit.css/generic/_normalize.scss */
input[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  -moz-box-sizing: content-box;
  -webkit-box-sizing: content-box;
  /* 2 */
  box-sizing: content-box;
}

/*
 * Remove inner padding and search cancel button in Safari 5 and Chrome
 * on OS X.
 */
/* line 360, src/inuit.css/generic/_normalize.scss */
input[type="search"]::-webkit-search-cancel-button,
input[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none;
}

/*
 * Remove inner padding and border in Firefox 4+.
 */
/* line 369, src/inuit.css/generic/_normalize.scss */
button::-moz-focus-inner,
input::-moz-focus-inner {
  border: 0;
  padding: 0;
}

/*
 * 1. Remove default vertical scrollbar in IE 8/9.
 * 2. Improve readability and alignment in all browsers.
 */
/* line 380, src/inuit.css/generic/_normalize.scss */
textarea {
  overflow: auto;
  /* 1 */
  vertical-align: top;
  /* 2 */
}

/* ==========================================================================
   Tables
   ========================================================================== */
/*
 * Remove most spacing between table cells.
 */
/* line 393, src/inuit.css/generic/_normalize.scss */
table {
  border-collapse: collapse;
  border-spacing: 0;
}

/*------------------------------------*\
    $RESET
\*------------------------------------*/
/**
 * A more considered reset; more of a restart...
 * As per: csswizardry.com/2011/10/reset-restarted
 */
/**
* Let’s make the box model all nice, shall we...?
*/
/* line 14, src/inuit.css/generic/_reset.scss */
*, *:before, *:after {
  -webkit-box-sizing: border-box;
  -moz-box-sizing: border-box;
  -ms-box-sizing: border-box;
  -o-box-sizing: border-box;
  box-sizing: border-box;
}

/**
 * The usual...
 */
/* line 25, src/inuit.css/generic/_reset.scss */
h1, h2, h3, h4, h5, h6,
p, blockquote, pre,
dl, dd, ol, ul,
form, fieldset, legend,
table, th, td, caption,
hr {
  margin: 0;
  padding: 0;
}

/**
 * Give a help cursor to elements that give extra info on `:hover`.
 */
/* line 38, src/inuit.css/generic/_reset.scss */
abbr[title], dfn[title] {
  cursor: help;
}

/**
 * Remove underlines from potentially troublesome elements.
 */
/* line 45, src/inuit.css/generic/_reset.scss */
u, ins {
  text-decoration: none;
}

/**
 * Apply faux underline via `border-bottom`.
 */
/* line 52, src/inuit.css/generic/_reset.scss */
ins {
  border-bottom: 1px solid;
}

/**
 * So that `alt` text is visually offset if images don’t load.
 */
/* line 59, src/inuit.css/generic/_reset.scss */
img {
  font-style: italic;
}

/**
 * Give form elements some cursor interactions...
 */
/* line 66, src/inuit.css/generic/_reset.scss */
label,
input,
textarea,
button,
select,
option {
  cursor: pointer;
}

/* line 74, src/inuit.css/generic/_reset.scss */
.text-input:active,
.text-input:focus,
textarea:active,
textarea:focus {
  cursor: text;
  outline: none;
}

/*------------------------------------*\
    $CLEARFIX
\*------------------------------------*/
/**
 * Micro clearfix, as per: css-101.org/articles/clearfix/latest-new-clearfix-so-far.php
 * Extend the clearfix class with Sass to avoid the `.cf` class appearing over
 * and over in your markup.
 */
/* line 10, src/inuit.css/generic/_clearfix.scss */
.cf:after, .main-header nav:after, .header-container:after {
  content: "";
  display: table;
  clear: both;
}

/*------------------------------------*\
    $SHARED
\*------------------------------------*/
/**
 * Where `margin-bottom` is concerned, this value will be the same as the
 * base line-height. This allows us to keep a consistent vertical rhythm.
 * As per: csswizardry.com/2012/06/single-direction-margin-declarations
 */
/**
 * Base elements
 */
/* line 12, src/inuit.css/generic/_shared.scss */
h1, h2, h3, h4, h5, h6, hgroup,
ul, ol, dl,
blockquote, p, address,
table,
fieldset, figure,
pre,
.form-fields > li,
.media,
.island,
.islet {
  margin-bottom: 24px;
  margin-bottom: 1.5rem;
}
/* line 28, src/inuit.css/generic/_shared.scss */
.islet h1, .islet h2, .islet h3, .islet h4, .islet h5, .islet h6, .islet hgroup, .islet
ul, .islet ol, .islet dl, .islet
blockquote, .islet p, .islet address, .islet
table, .islet
fieldset, .islet figure, .islet
pre, .islet .form-fields > li, .islet
.media, .islet
.island, .islet
.islet {
  margin-bottom: 12px;
  margin-bottom: 0.75rem;
}

/**
 * Doubled up `margin-bottom` helper class.
 */
/* line 38, src/inuit.css/generic/_shared.scss */
.landmark {
  margin-bottom: 48px;
  margin-bottom: 3rem;
}

/**
 * `hr` elements only take up a few pixels, so we need to give them special
 * treatment regarding vertical rhythm.
 */
/* line 48, src/inuit.css/generic/_shared.scss */
hr {
  margin-bottom: 22px;
  margin-bottom: 1.375rem;
}

/**
 * Where `margin-left` is concerned we want to try and indent certain elements
 * by a consistent amount. Define that amount once, here.
 */
/* line 58, src/inuit.css/generic/_shared.scss */
ul, ol, dd {
  margin-left: 48px;
  margin-left: 3rem;
}

/**
 * Base styles; unclassed HTML elements etc.
 */
/*------------------------------------*\
    $MAIN
\*------------------------------------*/
/* line 4, src/inuit.css/base/_main.scss */
html {
  font: 1em/1.5 sans-serif;
  overflow-y: scroll;
  min-height: 100%;
}

/*------------------------------------*\
    $HEADINGS
\*------------------------------------*/
/**
 * As per: csswizardry.com/2012/02/pragmatic-practical-font-sizing-in-css
 *
 * When we define a heading we also define a corresponding class to go with it.
 * This allows us to apply, say, `class=alpha` to a `h3`; a double-stranded
 * heading hierarchy.
 */
/* line 11, src/inuit.css/base/_headings.scss */
h1, .alpha {
  font-size: 36px;
  font-size: 2.25rem;
  line-height: 1.33333;
}

/* line 14, src/inuit.css/base/_headings.scss */
h2, .beta {
  font-size: 30px;
  font-size: 1.875rem;
  line-height: 1.6;
}

/* line 17, src/inuit.css/base/_headings.scss */
h3, .gamma {
  font-size: 24px;
  font-size: 1.5rem;
  line-height: 1;
}

/* line 20, src/inuit.css/base/_headings.scss */
h4, .delta {
  font-size: 20px;
  font-size: 1.25rem;
  line-height: 1.2;
}

/* line 23, src/inuit.css/base/_headings.scss */
h5, .epsilon {
  font-size: 16px;
  font-size: 1rem;
  line-height: 1.5;
}

/* line 26, src/inuit.css/base/_headings.scss */
h6, .zeta {
  font-size: 14px;
  font-size: 0.875rem;
  line-height: 1.71429;
}

/**
 * Heading groups and generic any-heading class.
 * To target any heading of any level simply apply a class of `.hN`, e.g.:
 *
   <hgroup>
       <h1 class=hN>inuit.css</h1>
       <h2 class=hN>Best. Framework. Ever!</h2>
   </hgroup>
 *
 */
/* line 43, src/inuit.css/base/_headings.scss */
hgroup .hN {
  margin-bottom: 0;
}

/**
 * A series of classes for setting massive type; for use in heroes, mastheads,
 * promos, etc.
 */
/* line 52, src/inuit.css/base/_headings.scss */
.giga {
  font-size: 96px;
  font-size: 6rem;
  line-height: 1;
}

/* line 55, src/inuit.css/base/_headings.scss */
.mega {
  font-size: 72px;
  font-size: 4.5rem;
  line-height: 1;
}

/* line 58, src/inuit.css/base/_headings.scss */
.kilo {
  font-size: 48px;
  font-size: 3rem;
  line-height: 1;
}

/*------------------------------------*\
    $PARAGRAPHS
\*------------------------------------*/
/**
 * The `.lede` class is used to make the introductory text (usually a paragraph)
 * of a document slightly larger.
 */
/* line 8, src/inuit.css/base/_paragraphs.scss */
.lede,
.lead {
  font-size: 18px;
  font-size: 1.125rem;
  line-height: 1.33333;
}

/*------------------------------------*\
    $SMALLPRINT
\*------------------------------------*/
/**
 * A series of classes for setting tiny type; for use in smallprint etc.
 */
/* line 7, src/inuit.css/base/_smallprint.scss */
.smallprint,
.milli {
  font-size: 12px;
  font-size: 0.75rem;
  line-height: 2;
}

/* line 11, src/inuit.css/base/_smallprint.scss */
.micro {
  font-size: 10px;
  font-size: 0.625rem;
  line-height: 2.4;
}

/*------------------------------------*\
    $QUOTES
\*------------------------------------*/
/**
 * If English quotes are set in `_vars.scss`, define them here.
 */
/**
 * Big up @boblet: html5doctor.com/blockquote-q-cite
 */
/**
 * Inline quotes.
 */
/* line 20, src/inuit.css/base/_quotes.scss */
q {
  quotes: "‘" "’" "\\201C" "\\201D";
}
/* line 23, src/inuit.css/base/_quotes.scss */
q:before {
  content: "\2018";
  content: open-quote;
}
/* line 27, src/inuit.css/base/_quotes.scss */
q:after {
  content: "\2019";
  content: close-quote;
}
/* line 32, src/inuit.css/base/_quotes.scss */
q q:before {
  content: "\201C";
  content: open-quote;
}
/* line 36, src/inuit.css/base/_quotes.scss */
q q:after {
  content: "\201D";
  content: close-quote;
}

/* line 42, src/inuit.css/base/_quotes.scss */
blockquote {
  quotes: "\\201C" "\\201D";
}
/* line 45, src/inuit.css/base/_quotes.scss */
blockquote p:before {
  content: "\\201C";
  content: open-quote;
}
/* line 49, src/inuit.css/base/_quotes.scss */
blockquote p:after {
  content: "";
  content: no-close-quote;
}
/* line 53, src/inuit.css/base/_quotes.scss */
blockquote p:last-of-type:after {
  content: "\\201D";
  content: close-quote;
}
/* line 58, src/inuit.css/base/_quotes.scss */
blockquote q:before {
  content: "\2018";
  content: open-quote;
}
/* line 62, src/inuit.css/base/_quotes.scss */
blockquote q:after {
  content: "\2019";
  content: close-quote;
}

/**
 *
   <blockquote>
       <p>Insanity: doing the same thing over and over again and expecting
       different results.</p>
       <b class=source>Albert Einstein</b>
   </blockquote>
 *
 */
/* line 78, src/inuit.css/base/_quotes.scss */
blockquote {
  /**
   * .4em is roughly equal to the width of the opening “ that we wish to hang.
   */
  text-indent: -0.41em;
}
/* line 84, src/inuit.css/base/_quotes.scss */
blockquote p:last-of-type {
  margin-bottom: 0;
}

/* line 89, src/inuit.css/base/_quotes.scss */
.source {
  display: block;
  text-indent: 0;
}
/* line 93, src/inuit.css/base/_quotes.scss */
.source:before {
  content: "\2014";
}

/*------------------------------------*\
    $CODE
\*------------------------------------*/
/**
 * Use an explicit font stack to ensure browsers render correct `line-height`.
 */
/* line 7, src/inuit.css/base/_code.scss */
pre {
  overflow: auto;
}

/* line 10, src/inuit.css/base/_code.scss */
pre mark {
  background: none;
  border-bottom: 1px solid;
  color: inherit;
}

/**
 * Add comments to your code examples, e.g.:
 *
   <code>&lt;/div&gt;<span class=code-comment>&lt;!-- /wrapper --&gt;</span></code>
 *
 */
/* line 23, src/inuit.css/base/_code.scss */
.code-comment {
  /**
   * Override this setting in your theme stylesheet
   */
  opacity: 0.75;
  filter: alpha(opacity=75);
}

/**
 * You can add line numbers to your code examples but be warned, it requires
 * some pretty funky looking markup, e.g.:
 *
   <ol class=line-numbers>
       <li><code>.nav{</code></li>
       <li><code>    list-style:none;</code></li>
       <li><code>    margin-left:0;</code></li>
       <li><code>}</code></li>
       <li><code>    .nav > li,</code></li>
       <li><code>        .nav > li > a{</code></li>
       <li><code>            display:inline-block;</code></li>
       <li><code>           *display:inline-block;</code></li>
       <li><code>            zoom:1;</code></li>
       <li><code>        }</code></li>
   </ol>
 *
 * 1. Make the list look like code.
 * 2. Give the list flush numbers with a leading zero.
 * 3. Make sure lines of code don’t wrap.
 * 4. Give the code form by forcing the `code` to honour white-space.
 */
/* line 54, src/inuit.css/base/_code.scss */
.line-numbers {
  font-family: monospace, serif;
  /* [1] */
  list-style: decimal-leading-zero inside;
  /* [2] */
  white-space: nowrap;
  /* [3] */
  overflow: auto;
  /* [3] */
  margin-left: 0;
}

/* line 61, src/inuit.css/base/_code.scss */
.line-numbers code {
  white-space: pre;
  /* [4] */
}

/*------------------------------------*\
    $IMAGES
\*------------------------------------*/
/**
 * Demo: jsfiddle.net/inuitcss/yMtur
 */
/**
 * Fluid images.
 */
/* line 10, src/inuit.css/base/_images.scss */
img {
  max-width: 100%;
}

/**
 * Non-fluid images if you specify `width` and/or `height` attributes.
 */
/* line 18, src/inuit.css/base/_images.scss */
img[width],
img[height] {
  max-width: none;
}

/**
 * Rounded images.
 */
/* line 27, src/inuit.css/base/_images.scss */
.img--round {
  border-radius: 4px;
}

/**
 * Image placement variations.
 */
/* line 33, src/inuit.css/base/_images.scss */
.img--right {
  float: right;
  margin-bottom: 24px;
  margin-left: 24px;
}

/* line 38, src/inuit.css/base/_images.scss */
.img--left {
  float: left;
  margin-right: 24px;
  margin-bottom: 24px;
}

/* line 43, src/inuit.css/base/_images.scss */
.img--center, .main-footer .logo {
  display: block;
  margin-right: auto;
  margin-bottom: 24px;
  margin-left: auto;
}

/**
 * Keep your images on your baseline.
 *
 * Please note, these will not work too nicely with fluid images and will
 * distort when resized below a certain width. Use with caution.
 */
/* line 57, src/inuit.css/base/_images.scss */
.img--short {
  height: 120px;
}

/* line 60, src/inuit.css/base/_images.scss */
.img--medium {
  height: 240px;
}

/* line 63, src/inuit.css/base/_images.scss */
.img--tall {
  height: 360px;
}

/**
 * Images in `figure` elements.
 */
/* line 71, src/inuit.css/base/_images.scss */
figure > img {
  display: block;
}

/*------------------------------------*\
    $LISTS
\*------------------------------------*/
/**
 * Remove vertical spacing from nested lists.
 */
/* line 8, src/inuit.css/base/_lists.scss */
li > ul,
li > ol {
  margin-bottom: 0;
}

/**
 * Have a numbered `ul` without the semantics implied by using an `ol`.
 */
/*ul*/
/* line 17, src/inuit.css/base/_lists.scss */
.numbered-list {
  list-style-type: decimal;
}

/*------------------------------------*\
    $TABLES
\*------------------------------------*/
/**
 * We have a lot at our disposal for making very complex table constructs, e.g.:
 *
   <table class="table--bordered  table--striped  table--data">
       <colgroup>
           <col class=t10>
           <col class=t10>
           <col class=t10>
           <col>
       </colgroup>
       <thead>
           <tr>
               <th colspan=3>Foo</th>
               <th>Bar</th>
           </tr>
           <tr>
               <th>Lorem</th>
               <th>Ipsum</th>
               <th class=numerical>Dolor</th>
               <th>Sit</th>
           </tr>
       </thead>
       <tbody>
           <tr>
               <th rowspan=3>Sit</th>
               <td>Dolor</td>
               <td class=numerical>03.788</td>
               <td>Lorem</td>
           </tr>
           <tr>
               <td>Dolor</td>
               <td class=numerical>32.210</td>
               <td>Lorem</td>
           </tr>
           <tr>
               <td>Dolor</td>
               <td class=numerical>47.797</td>
               <td>Lorem</td>
           </tr>
           <tr>
               <th rowspan=2>Sit</th>
               <td>Dolor</td>
               <td class=numerical>09.640</td>
               <td>Lorem</td>
           </tr>
           <tr>
               <td>Dolor</td>
               <td class=numerical>12.117</td>
               <td>Lorem</td>
           </tr>
       </tbody>
   </table>
 *
 */
/* line 58, src/inuit.css/base/_tables.scss */
table {
  width: 100%;
}

/* line 61, src/inuit.css/base/_tables.scss */
th,
td {
  padding: 6px;
  text-align: left;
}
@media screen and (min-width: 480px) {
  /* line 61, src/inuit.css/base/_tables.scss */
  th,
  td {
    padding: 12px;
  }
}

/**
 * Cell alignments
 */
/* line 74, src/inuit.css/base/_tables.scss */
[colspan] {
  text-align: center;
}

/* line 77, src/inuit.css/base/_tables.scss */
[colspan="1"] {
  text-align: left;
}

/* line 80, src/inuit.css/base/_tables.scss */
[rowspan] {
  vertical-align: middle;
}

/* line 83, src/inuit.css/base/_tables.scss */
[rowspan="1"] {
  vertical-align: top;
}

/* line 86, src/inuit.css/base/_tables.scss */
.numerical {
  text-align: right;
}

/**
 * In the HTML above we see several `col` elements with classes whose numbers
 * represent a percentage width for that column. We leave one column free of a
 * class so that column can soak up the effects of any accidental breakage in
 * the table.
 */
/* line 96, src/inuit.css/base/_tables.scss */
.t5 {
  width: 5%;
}

/* line 97, src/inuit.css/base/_tables.scss */
.t10 {
  width: 10%;
}

/* line 98, src/inuit.css/base/_tables.scss */
.t12 {
  width: 12.5%;
}

/* 1/8 */
/* line 99, src/inuit.css/base/_tables.scss */
.t15 {
  width: 15%;
}

/* line 100, src/inuit.css/base/_tables.scss */
.t20 {
  width: 20%;
}

/* line 101, src/inuit.css/base/_tables.scss */
.t25 {
  width: 25%;
}

/* 1/4 */
/* line 102, src/inuit.css/base/_tables.scss */
.t30 {
  width: 30%;
}

/* line 103, src/inuit.css/base/_tables.scss */
.t33 {
  width: 33.333%;
}

/* 1/3 */
/* line 104, src/inuit.css/base/_tables.scss */
.t35 {
  width: 35%;
}

/* line 105, src/inuit.css/base/_tables.scss */
.t37 {
  width: 37.5%;
}

/* 3/8 */
/* line 106, src/inuit.css/base/_tables.scss */
.t40 {
  width: 40%;
}

/* line 107, src/inuit.css/base/_tables.scss */
.t45 {
  width: 45%;
}

/* line 108, src/inuit.css/base/_tables.scss */
.t50 {
  width: 50%;
}

/* 1/2 */
/* line 109, src/inuit.css/base/_tables.scss */
.t55 {
  width: 55%;
}

/* line 110, src/inuit.css/base/_tables.scss */
.t60 {
  width: 60%;
}

/* line 111, src/inuit.css/base/_tables.scss */
.t62 {
  width: 62.5%;
}

/* 5/8 */
/* line 112, src/inuit.css/base/_tables.scss */
.t65 {
  width: 65%;
}

/* line 113, src/inuit.css/base/_tables.scss */
.t66 {
  width: 66.666%;
}

/* 2/3 */
/* line 114, src/inuit.css/base/_tables.scss */
.t70 {
  width: 70%;
}

/* line 115, src/inuit.css/base/_tables.scss */
.t75 {
  width: 75%;
}

/* 3/4*/
/* line 116, src/inuit.css/base/_tables.scss */
.t80 {
  width: 80%;
}

/* line 117, src/inuit.css/base/_tables.scss */
.t85 {
  width: 85%;
}

/* line 118, src/inuit.css/base/_tables.scss */
.t87 {
  width: 87.5%;
}

/* 7/8 */
/* line 119, src/inuit.css/base/_tables.scss */
.t90 {
  width: 90%;
}

/* line 120, src/inuit.css/base/_tables.scss */
.t95 {
  width: 95%;
}

/**
 * Bordered tables
 */
/* line 128, src/inuit.css/base/_tables.scss */
.table--bordered th,
.table--bordered td {
  border: 1px solid #ccc;
}
/* line 132, src/inuit.css/base/_tables.scss */
.table--bordered th:empty,
.table--bordered td:empty {
  border: none;
}
/* line 137, src/inuit.css/base/_tables.scss */
.table--bordered thead tr:last-child th {
  border-bottom-width: 2px;
}
/* line 141, src/inuit.css/base/_tables.scss */
.table--bordered tbody tr th:last-of-type {
  border-right-width: 2px;
}

/**
 * Striped tables
 */
/* line 152, src/inuit.css/base/_tables.scss */
.table--striped tbody tr:nth-of-type(odd) {
  background-color: #ffc;
  /* Override this color in your theme stylesheet */
}

/**
 * Data table
 */
/* line 161, src/inuit.css/base/_tables.scss */
.table--data {
  font: 12px/1.5 sans-serif;
}

/*------------------------------------*\
    $FORMS
\*------------------------------------*/
/**
 *
 * Demo: jsfiddle.net/inuitcss/MhHHU
 *
 */
/* line 9, src/inuit.css/base/_forms.scss */
fieldset {
  padding: 24px;
}

/**
 * Text inputs
 *
 * Instead of a `[type]` selector for each kind of form input, we just use a
 * class to target any/every one, e.g.:
   <input type=text class=text-input>
   <input type=email class=text-input>
   <input type=password class=text-input>
 *
 */
/* line 24, src/inuit.css/base/_forms.scss */
.text-input,
textarea {
  /**
   * Style these via your theme stylesheet.
   */
}

/**
 * Group sets of form fields in a list, e.g.:
 *
   <ul class=form-fields>
       <li>
           <label />
           <input />
       </li>
       <li>
           <label />
           <select />
       </li>
       <li>
           <label />
           <input />
       </li>
   </ul>
 *
 */
/* line 51, src/inuit.css/base/_forms.scss */
.form-fields {
  list-style: none;
  margin: 0;
}

/* line 58, src/inuit.css/base/_forms.scss */
.form-fields > li:last-child {
  margin-bottom: 0;
}

/**
 * Labels
 *
 * Define a `.label` class as well as a `label` element. This means we can apply
 * label-like styling to meta-labels for groups of options where a `label`
 * element is not suitable, e.g.:
 *
   <li>
       <span class=label>Select an option below:</span>
       <ul class="multi-list  four-cols">
           <li>
               <input /> <label />
           </li>
           <li>
               <input /> <label />
           </li>
           <li>
               <input /> <label />
           </li>
           <li>
               <input /> <label />
           </li>
       </ul>
   </li>
 *
 */
/* line 89, src/inuit.css/base/_forms.scss */
label,
.label {
  display: block;
}

/**
 * Extra help text in `label`s, e.g.:
 *
   <label>Card number <small class=additional>No spaces</small></label>
 *
 */
/* line 99, src/inuit.css/base/_forms.scss */
.additional {
  display: block;
  font-weight: normal;
}

/*
 * Groups of checkboxes and radios, e.g.:
 *
   <li>
       <ul class=check-list>
           <li>
               <input /> <label />
           </li>
           <li>
               <input /> <label />
           </li>
       </ul>
   </li>
 *
 */
/* line 120, src/inuit.css/base/_forms.scss */
.check-list {
  list-style: none;
  margin: 0;
}

/*
 * Labels in check-lists
 */
/* line 127, src/inuit.css/base/_forms.scss */
.check-label,
.check-list label,
.check-list .label {
  display: inline-block;
}

/**
 * Spoken forms are for forms that read like spoken word, e.g.:
 *
   <li class=spoken-form>
       Hello, my <label for=spoken-name>name</label> is
       <input type=text class=text-input id=spoken-name>. My home
       <label for=country>country</label> is
       <select id=country>
           <option>UK</option>
           <option>US</option>
           <option>Other</option>
       </select>
   </li>
 *
 */
/* line 149, src/inuit.css/base/_forms.scss */
.spoken-form label {
  display: inline-block;
  font: inherit;
}

/**
 * Extra help text displayed after a field when that field is in focus, e.g.:
 *
   <label for=email>Email:</label>
   <input type=email class=text-input id=email>
   <small class=extra-help>.edu emails only</small>
 *
 * We leave the help text in the document flow and merely set it to
 * `visibility:hidden;`. This means that it won’t interfere with anything once
 * it reappears.
 *
 */
/*small*/
/* line 167, src/inuit.css/base/_forms.scss */
.extra-help {
  display: inline-block;
  visibility: hidden;
}

/* line 171, src/inuit.css/base/_forms.scss */
.text-input:active + .extra-help,
.text-input:focus + .extra-help {
  visibility: visible;
}

/**
 * Objects and abstractions
 */
/*------------------------------------*\
    $GRIDS
\*------------------------------------*/
/**
 * Fluid and nestable grid system. It is necessary to comment out, or otherwise
 * remove, the whitespace from between grid items, e.g.:
 *
   <div class="grid">

       <div class="grid__item  one-third">
           <p>One third grid</p>
       </div><!--

    --><div class="grid__item  two-thirds">
           <p>Two thirds grid</p>
       </div><!--

    --><div class="grid__item  one-half">
           <p>One half grid</p>
       </div><!--

    --><div class="grid__item  one-quarter">
           <p>One quarter grid</p>
       </div><!--

    --><div class="grid__item  one-quarter">
           <p>One quarter grid</p>
       </div>

   </div>
 *
 * Demo: jsfiddle.net/inuitcss/CLYUC
 *
 */
/**
 * Grid wrapper
 */
/* line 42, src/inuit.css/objects/_grids.scss */
.grid {
  margin-left: -24px;
  list-style: none;
  margin-bottom: 0;
}

/**
 * Very infrequently occuring grid wrappers as children of grid wrappers.
 */
/* line 52, src/inuit.css/objects/_grids.scss */
.grid > .grid {
  margin-left: 0;
}

/**
 * Grid
 */
/* line 60, src/inuit.css/objects/_grids.scss */
.grid__item {
  display: inline-block;
  width: 100%;
  padding-left: 24px;
  vertical-align: top;
}

/**
 * Reversed grids allow you to structure your source in the opposite order to
 * how your rendered layout will appear. Extends `.grid`.
 */
/* line 75, src/inuit.css/objects/_grids.scss */
.grid--rev {
  direction: rtl;
  text-align: left;
}
/* line 79, src/inuit.css/objects/_grids.scss */
.grid--rev > .grid__item {
  direction: ltr;
  text-align: left;
}

/**
 * Gutterless grids have all the properties of regular grids, minus any spacing.
 * Extends `.grid`.
 */
/* line 90, src/inuit.css/objects/_grids.scss */
.grid--full {
  margin-left: 0;
}
/* line 93, src/inuit.css/objects/_grids.scss */
.grid--full > .grid__item {
  padding-left: 0;
}

/**
 * Align the entire grid to the right. Extends `.grid`.
 */
/* line 102, src/inuit.css/objects/_grids.scss */
.grid--right {
  text-align: right;
}
/* line 105, src/inuit.css/objects/_grids.scss */
.grid--right > .grid__item {
  text-align: left;
}

/**
 * Centered grids align grid items centrally without needing to use push or pull
 * classes. Extends `.grid`.
 */
/* line 115, src/inuit.css/objects/_grids.scss */
.grid--center {
  text-align: center;
}
/* line 118, src/inuit.css/objects/_grids.scss */
.grid--center > .grid__item {
  text-align: left;
}

/**
 * Align grid cells vertically (`.grid--middle` or `.grid--bottom`). Extends
 * `.grid`.
 */
/* line 130, src/inuit.css/objects/_grids.scss */
.grid--middle > .grid__item {
  vertical-align: middle;
}

/* line 137, src/inuit.css/objects/_grids.scss */
.grid--bottom > .grid__item {
  vertical-align: bottom;
}

/**
 * Create grids with narrower gutters. Extends `.grid`.
 */
/* line 146, src/inuit.css/objects/_grids.scss */
.grid--narrow {
  margin-left: -10px;
}
/* line 149, src/inuit.css/objects/_grids.scss */
.grid--narrow > .grid__item {
  padding-left: 10px;
}

/**
 * Create grids with wider gutters. Extends `.grid`.
 */
/* line 158, src/inuit.css/objects/_grids.scss */
.grid--wide {
  margin-left: -40px;
}
/* line 161, src/inuit.css/objects/_grids.scss */
.grid--wide > .grid__item {
  padding-left: 40px;
}

/**
 * Style trumps; helper and brand classes
 */
/*------------------------------------*\
    $WIDTHS
\*------------------------------------*/
/**
 * Sizes in human readable format. These are used in conjunction with other
 * objects and abstractions found in inuit.css, most commonly the grid system
 * and faux flexbox.
 *
 * We have a mixin to generate our widths and their breakpoint-specific
 * variations.
 */
/**
* Whole
*/
/* line 17, src/inuit.css/generic/_widths.scss */
.one-whole {
  width: 100%;
}

/**
* Halves
*/
/* line 23, src/inuit.css/generic/_widths.scss */
.one-half, .two-quarters, .three-sixths, .four-eighths, .five-tenths, .six-twelfths {
  width: 50%;
}

/**
* Thirds
*/
/* line 29, src/inuit.css/generic/_widths.scss */
.one-third, .two-sixths, .four-twelfths {
  width: 33.333%;
}

/* line 30, src/inuit.css/generic/_widths.scss */
.two-thirds, .four-sixths, .eight-twelfths {
  width: 66.666%;
}

/**
* Quarters
*/
/* line 36, src/inuit.css/generic/_widths.scss */
.one-quarter, .two-eighths, .three-twelfths {
  width: 25%;
}

/* line 38, src/inuit.css/generic/_widths.scss */
.three-quarters, .six-eighths, .nine-twelfths {
  width: 75%;
}

/**
* Fifths
*/
/* line 44, src/inuit.css/generic/_widths.scss */
.one-fifth, .two-tenths {
  width: 20%;
}

/* line 45, src/inuit.css/generic/_widths.scss */
.two-fifths, .four-tenths {
  width: 40%;
}

/* line 46, src/inuit.css/generic/_widths.scss */
.three-fifths, .six-tenths {
  width: 60%;
}

/* line 47, src/inuit.css/generic/_widths.scss */
.four-fifths, .eight-tenths {
  width: 80%;
}

/**
* Sixths
*/
/* line 53, src/inuit.css/generic/_widths.scss */
.one-sixth, .two-twelfths {
  width: 16.666%;
}

/* line 57, src/inuit.css/generic/_widths.scss */
.five-sixths, .ten-twelfths {
  width: 83.333%;
}

/**
* Eighths
*/
/* line 63, src/inuit.css/generic/_widths.scss */
.one-eighth {
  width: 12.5%;
}

/* line 65, src/inuit.css/generic/_widths.scss */
.three-eighths {
  width: 37.5%;
}

/* line 67, src/inuit.css/generic/_widths.scss */
.five-eighths {
  width: 62.5%;
}

/* line 69, src/inuit.css/generic/_widths.scss */
.seven-eighths {
  width: 87.5%;
}

/**
* Tenths
*/
/* line 75, src/inuit.css/generic/_widths.scss */
.one-tenth {
  width: 10%;
}

/* line 77, src/inuit.css/generic/_widths.scss */
.three-tenths {
  width: 30%;
}

/* line 81, src/inuit.css/generic/_widths.scss */
.seven-tenths {
  width: 70%;
}

/* line 83, src/inuit.css/generic/_widths.scss */
.nine-tenths {
  width: 90%;
}

/**
* Twelfths
*/
/* line 89, src/inuit.css/generic/_widths.scss */
.one-twelfth {
  width: 8.333%;
}

/* line 93, src/inuit.css/generic/_widths.scss */
.five-twelfths {
  width: 41.666%;
}

/* line 95, src/inuit.css/generic/_widths.scss */
.seven-twelfths {
  width: 58.333%;
}

/* line 99, src/inuit.css/generic/_widths.scss */
.eleven-twelfths {
  width: 91.666%;
}

/**
 * If you have set `$responsive` to ‘true’ in `_vars.scss` then you now have
 * access to these classes. You can define at which breakpoint you’d like an
 * element to be a certain size, e.g.:
 *
 * `<div class="g  one-quarter  lap-one-half  palm-one-whole"> ... </div>`
 *
 * This would create a `div` that, at ‘desktop’ sizes, takes up a quarter of the
 * horizontal space, a half of that space at ‘tablet’ sizes, and goes full width
 * at ‘mobile’ sizes.
 *
 * Demo: jsfiddle.net/inuitcss/WS4Ge
 *
 */
@media only screen and (max-width: 480px) {
  /**
  * Whole
  */
  /* line 17, src/inuit.css/generic/_widths.scss */
  .palm-one-whole {
    width: 100%;
  }

  /**
  * Halves
  */
  /* line 23, src/inuit.css/generic/_widths.scss */
  .palm-one-half, .palm-two-quarters, .palm-three-sixths, .palm-four-eighths, .palm-five-tenths, .palm-six-twelfths {
    width: 50%;
  }

  /**
  * Thirds
  */
  /* line 29, src/inuit.css/generic/_widths.scss */
  .palm-one-third, .palm-two-sixths, .palm-four-twelfths {
    width: 33.333%;
  }

  /* line 30, src/inuit.css/generic/_widths.scss */
  .palm-two-thirds, .palm-four-sixths, .palm-eight-twelfths {
    width: 66.666%;
  }

  /**
  * Quarters
  */
  /* line 36, src/inuit.css/generic/_widths.scss */
  .palm-one-quarter, .palm-two-eighths, .palm-three-twelfths {
    width: 25%;
  }

  /* line 38, src/inuit.css/generic/_widths.scss */
  .palm-three-quarters, .palm-six-eighths, .palm-nine-twelfths {
    width: 75%;
  }

  /**
  * Fifths
  */
  /* line 44, src/inuit.css/generic/_widths.scss */
  .palm-one-fifth, .palm-two-tenths {
    width: 20%;
  }

  /* line 45, src/inuit.css/generic/_widths.scss */
  .palm-two-fifths, .palm-four-tenths {
    width: 40%;
  }

  /* line 46, src/inuit.css/generic/_widths.scss */
  .palm-three-fifths, .palm-six-tenths {
    width: 60%;
  }

  /* line 47, src/inuit.css/generic/_widths.scss */
  .palm-four-fifths, .palm-eight-tenths {
    width: 80%;
  }

  /**
  * Sixths
  */
  /* line 53, src/inuit.css/generic/_widths.scss */
  .palm-one-sixth, .palm-two-twelfths {
    width: 16.666%;
  }

  /* line 57, src/inuit.css/generic/_widths.scss */
  .palm-five-sixths, .palm-ten-twelfths {
    width: 83.333%;
  }

  /**
  * Eighths
  */
  /* line 63, src/inuit.css/generic/_widths.scss */
  .palm-one-eighth {
    width: 12.5%;
  }

  /* line 65, src/inuit.css/generic/_widths.scss */
  .palm-three-eighths {
    width: 37.5%;
  }

  /* line 67, src/inuit.css/generic/_widths.scss */
  .palm-five-eighths {
    width: 62.5%;
  }

  /* line 69, src/inuit.css/generic/_widths.scss */
  .palm-seven-eighths {
    width: 87.5%;
  }

  /**
  * Tenths
  */
  /* line 75, src/inuit.css/generic/_widths.scss */
  .palm-one-tenth {
    width: 10%;
  }

  /* line 77, src/inuit.css/generic/_widths.scss */
  .palm-three-tenths {
    width: 30%;
  }

  /* line 81, src/inuit.css/generic/_widths.scss */
  .palm-seven-tenths {
    width: 70%;
  }

  /* line 83, src/inuit.css/generic/_widths.scss */
  .palm-nine-tenths {
    width: 90%;
  }

  /**
  * Twelfths
  */
  /* line 89, src/inuit.css/generic/_widths.scss */
  .palm-one-twelfth {
    width: 8.333%;
  }

  /* line 93, src/inuit.css/generic/_widths.scss */
  .palm-five-twelfths {
    width: 41.666%;
  }

  /* line 95, src/inuit.css/generic/_widths.scss */
  .palm-seven-twelfths {
    width: 58.333%;
  }

  /* line 99, src/inuit.css/generic/_widths.scss */
  .palm-eleven-twelfths {
    width: 91.666%;
  }
}
@media only screen and (min-width: 481px) and (max-width: 939px) {
  /**
  * Whole
  */
  /* line 17, src/inuit.css/generic/_widths.scss */
  .lap-one-whole {
    width: 100%;
  }

  /**
  * Halves
  */
  /* line 23, src/inuit.css/generic/_widths.scss */
  .lap-one-half, .lap-two-quarters, .lap-three-sixths, .lap-four-eighths, .lap-five-tenths, .lap-six-twelfths {
    width: 50%;
  }

  /**
  * Thirds
  */
  /* line 29, src/inuit.css/generic/_widths.scss */
  .lap-one-third, .lap-two-sixths, .lap-four-twelfths {
    width: 33.333%;
  }

  /* line 30, src/inuit.css/generic/_widths.scss */
  .lap-two-thirds, .lap-four-sixths, .lap-eight-twelfths {
    width: 66.666%;
  }

  /**
  * Quarters
  */
  /* line 36, src/inuit.css/generic/_widths.scss */
  .lap-one-quarter, .lap-two-eighths, .lap-three-twelfths {
    width: 25%;
  }

  /* line 38, src/inuit.css/generic/_widths.scss */
  .lap-three-quarters, .lap-six-eighths, .lap-nine-twelfths {
    width: 75%;
  }

  /**
  * Fifths
  */
  /* line 44, src/inuit.css/generic/_widths.scss */
  .lap-one-fifth, .lap-two-tenths {
    width: 20%;
  }

  /* line 45, src/inuit.css/generic/_widths.scss */
  .lap-two-fifths, .lap-four-tenths {
    width: 40%;
  }

  /* line 46, src/inuit.css/generic/_widths.scss */
  .lap-three-fifths, .lap-six-tenths {
    width: 60%;
  }

  /* line 47, src/inuit.css/generic/_widths.scss */
  .lap-four-fifths, .lap-eight-tenths {
    width: 80%;
  }

  /**
  * Sixths
  */
  /* line 53, src/inuit.css/generic/_widths.scss */
  .lap-one-sixth, .lap-two-twelfths {
    width: 16.666%;
  }

  /* line 57, src/inuit.css/generic/_widths.scss */
  .lap-five-sixths, .lap-ten-twelfths {
    width: 83.333%;
  }

  /**
  * Eighths
  */
  /* line 63, src/inuit.css/generic/_widths.scss */
  .lap-one-eighth {
    width: 12.5%;
  }

  /* line 65, src/inuit.css/generic/_widths.scss */
  .lap-three-eighths {
    width: 37.5%;
  }

  /* line 67, src/inuit.css/generic/_widths.scss */
  .lap-five-eighths {
    width: 62.5%;
  }

  /* line 69, src/inuit.css/generic/_widths.scss */
  .lap-seven-eighths {
    width: 87.5%;
  }

  /**
  * Tenths
  */
  /* line 75, src/inuit.css/generic/_widths.scss */
  .lap-one-tenth {
    width: 10%;
  }

  /* line 77, src/inuit.css/generic/_widths.scss */
  .lap-three-tenths {
    width: 30%;
  }

  /* line 81, src/inuit.css/generic/_widths.scss */
  .lap-seven-tenths {
    width: 70%;
  }

  /* line 83, src/inuit.css/generic/_widths.scss */
  .lap-nine-tenths {
    width: 90%;
  }

  /**
  * Twelfths
  */
  /* line 89, src/inuit.css/generic/_widths.scss */
  .lap-one-twelfth {
    width: 8.333%;
  }

  /* line 93, src/inuit.css/generic/_widths.scss */
  .lap-five-twelfths {
    width: 41.666%;
  }

  /* line 95, src/inuit.css/generic/_widths.scss */
  .lap-seven-twelfths {
    width: 58.333%;
  }

  /* line 99, src/inuit.css/generic/_widths.scss */
  .lap-eleven-twelfths {
    width: 91.666%;
  }
}
@media only screen and (min-width: 481px) {
  /**
  * Whole
  */
  /* line 17, src/inuit.css/generic/_widths.scss */
  .lap-and-up-one-whole {
    width: 100%;
  }

  /**
  * Halves
  */
  /* line 23, src/inuit.css/generic/_widths.scss */
  .lap-and-up-one-half, .lap-and-up-two-quarters, .lap-and-up-three-sixths, .lap-and-up-four-eighths, .lap-and-up-five-tenths, .lap-and-up-six-twelfths {
    width: 50%;
  }

  /**
  * Thirds
  */
  /* line 29, src/inuit.css/generic/_widths.scss */
  .lap-and-up-one-third, .lap-and-up-two-sixths, .lap-and-up-four-twelfths {
    width: 33.333%;
  }

  /* line 30, src/inuit.css/generic/_widths.scss */
  .lap-and-up-two-thirds, .lap-and-up-four-sixths, .lap-and-up-eight-twelfths {
    width: 66.666%;
  }

  /**
  * Quarters
  */
  /* line 36, src/inuit.css/generic/_widths.scss */
  .lap-and-up-one-quarter, .lap-and-up-two-eighths, .lap-and-up-three-twelfths {
    width: 25%;
  }

  /* line 38, src/inuit.css/generic/_widths.scss */
  .lap-and-up-three-quarters, .lap-and-up-six-eighths, .lap-and-up-nine-twelfths {
    width: 75%;
  }

  /**
  * Fifths
  */
  /* line 44, src/inuit.css/generic/_widths.scss */
  .lap-and-up-one-fifth, .lap-and-up-two-tenths {
    width: 20%;
  }

  /* line 45, src/inuit.css/generic/_widths.scss */
  .lap-and-up-two-fifths, .lap-and-up-four-tenths {
    width: 40%;
  }

  /* line 46, src/inuit.css/generic/_widths.scss */
  .lap-and-up-three-fifths, .lap-and-up-six-tenths {
    width: 60%;
  }

  /* line 47, src/inuit.css/generic/_widths.scss */
  .lap-and-up-four-fifths, .lap-and-up-eight-tenths {
    width: 80%;
  }

  /**
  * Sixths
  */
  /* line 53, src/inuit.css/generic/_widths.scss */
  .lap-and-up-one-sixth, .lap-and-up-two-twelfths {
    width: 16.666%;
  }

  /* line 57, src/inuit.css/generic/_widths.scss */
  .lap-and-up-five-sixths, .lap-and-up-ten-twelfths {
    width: 83.333%;
  }

  /**
  * Eighths
  */
  /* line 63, src/inuit.css/generic/_widths.scss */
  .lap-and-up-one-eighth {
    width: 12.5%;
  }

  /* line 65, src/inuit.css/generic/_widths.scss */
  .lap-and-up-three-eighths {
    width: 37.5%;
  }

  /* line 67, src/inuit.css/generic/_widths.scss */
  .lap-and-up-five-eighths {
    width: 62.5%;
  }

  /* line 69, src/inuit.css/generic/_widths.scss */
  .lap-and-up-seven-eighths {
    width: 87.5%;
  }

  /**
  * Tenths
  */
  /* line 75, src/inuit.css/generic/_widths.scss */
  .lap-and-up-one-tenth {
    width: 10%;
  }

  /* line 77, src/inuit.css/generic/_widths.scss */
  .lap-and-up-three-tenths {
    width: 30%;
  }

  /* line 81, src/inuit.css/generic/_widths.scss */
  .lap-and-up-seven-tenths {
    width: 70%;
  }

  /* line 83, src/inuit.css/generic/_widths.scss */
  .lap-and-up-nine-tenths {
    width: 90%;
  }

  /**
  * Twelfths
  */
  /* line 89, src/inuit.css/generic/_widths.scss */
  .lap-and-up-one-twelfth {
    width: 8.333%;
  }

  /* line 93, src/inuit.css/generic/_widths.scss */
  .lap-and-up-five-twelfths {
    width: 41.666%;
  }

  /* line 95, src/inuit.css/generic/_widths.scss */
  .lap-and-up-seven-twelfths {
    width: 58.333%;
  }

  /* line 99, src/inuit.css/generic/_widths.scss */
  .lap-and-up-eleven-twelfths {
    width: 91.666%;
  }
}
@media only screen and (max-width: 939px) {
  /**
  * Whole
  */
  /* line 17, src/inuit.css/generic/_widths.scss */
  .portable-one-whole {
    width: 100%;
  }

  /**
  * Halves
  */
  /* line 23, src/inuit.css/generic/_widths.scss */
  .portable-one-half, .portable-two-quarters, .portable-three-sixths, .portable-four-eighths, .portable-five-tenths, .portable-six-twelfths {
    width: 50%;
  }

  /**
  * Thirds
  */
  /* line 29, src/inuit.css/generic/_widths.scss */
  .portable-one-third, .portable-two-sixths, .portable-four-twelfths {
    width: 33.333%;
  }

  /* line 30, src/inuit.css/generic/_widths.scss */
  .portable-two-thirds, .portable-four-sixths, .portable-eight-twelfths {
    width: 66.666%;
  }

  /**
  * Quarters
  */
  /* line 36, src/inuit.css/generic/_widths.scss */
  .portable-one-quarter, .portable-two-eighths, .portable-three-twelfths {
    width: 25%;
  }

  /* line 38, src/inuit.css/generic/_widths.scss */
  .portable-three-quarters, .portable-six-eighths, .portable-nine-twelfths {
    width: 75%;
  }

  /**
  * Fifths
  */
  /* line 44, src/inuit.css/generic/_widths.scss */
  .portable-one-fifth, .portable-two-tenths {
    width: 20%;
  }

  /* line 45, src/inuit.css/generic/_widths.scss */
  .portable-two-fifths, .portable-four-tenths {
    width: 40%;
  }

  /* line 46, src/inuit.css/generic/_widths.scss */
  .portable-three-fifths, .portable-six-tenths {
    width: 60%;
  }

  /* line 47, src/inuit.css/generic/_widths.scss */
  .portable-four-fifths, .portable-eight-tenths {
    width: 80%;
  }

  /**
  * Sixths
  */
  /* line 53, src/inuit.css/generic/_widths.scss */
  .portable-one-sixth, .portable-two-twelfths {
    width: 16.666%;
  }

  /* line 57, src/inuit.css/generic/_widths.scss */
  .portable-five-sixths, .portable-ten-twelfths {
    width: 83.333%;
  }

  /**
  * Eighths
  */
  /* line 63, src/inuit.css/generic/_widths.scss */
  .portable-one-eighth {
    width: 12.5%;
  }

  /* line 65, src/inuit.css/generic/_widths.scss */
  .portable-three-eighths {
    width: 37.5%;
  }

  /* line 67, src/inuit.css/generic/_widths.scss */
  .portable-five-eighths {
    width: 62.5%;
  }

  /* line 69, src/inuit.css/generic/_widths.scss */
  .portable-seven-eighths {
    width: 87.5%;
  }

  /**
  * Tenths
  */
  /* line 75, src/inuit.css/generic/_widths.scss */
  .portable-one-tenth {
    width: 10%;
  }

  /* line 77, src/inuit.css/generic/_widths.scss */
  .portable-three-tenths {
    width: 30%;
  }

  /* line 81, src/inuit.css/generic/_widths.scss */
  .portable-seven-tenths {
    width: 70%;
  }

  /* line 83, src/inuit.css/generic/_widths.scss */
  .portable-nine-tenths {
    width: 90%;
  }

  /**
  * Twelfths
  */
  /* line 89, src/inuit.css/generic/_widths.scss */
  .portable-one-twelfth {
    width: 8.333%;
  }

  /* line 93, src/inuit.css/generic/_widths.scss */
  .portable-five-twelfths {
    width: 41.666%;
  }

  /* line 95, src/inuit.css/generic/_widths.scss */
  .portable-seven-twelfths {
    width: 58.333%;
  }

  /* line 99, src/inuit.css/generic/_widths.scss */
  .portable-eleven-twelfths {
    width: 91.666%;
  }
}
@media only screen and (min-width: 940px) {
  /**
  * Whole
  */
  /* line 17, src/inuit.css/generic/_widths.scss */
  .desk-one-whole {
    width: 100%;
  }

  /**
  * Halves
  */
  /* line 23, src/inuit.css/generic/_widths.scss */
  .desk-one-half, .desk-two-quarters, .desk-three-sixths, .desk-four-eighths, .desk-five-tenths, .desk-six-twelfths {
    width: 50%;
  }

  /**
  * Thirds
  */
  /* line 29, src/inuit.css/generic/_widths.scss */
  .desk-one-third, .desk-two-sixths, .desk-four-twelfths {
    width: 33.333%;
  }

  /* line 30, src/inuit.css/generic/_widths.scss */
  .desk-two-thirds, .desk-four-sixths, .desk-eight-twelfths {
    width: 66.666%;
  }

  /**
  * Quarters
  */
  /* line 36, src/inuit.css/generic/_widths.scss */
  .desk-one-quarter, .desk-two-eighths, .desk-three-twelfths {
    width: 25%;
  }

  /* line 38, src/inuit.css/generic/_widths.scss */
  .desk-three-quarters, .desk-six-eighths, .desk-nine-twelfths {
    width: 75%;
  }

  /**
  * Fifths
  */
  /* line 44, src/inuit.css/generic/_widths.scss */
  .desk-one-fifth, .desk-two-tenths {
    width: 20%;
  }

  /* line 45, src/inuit.css/generic/_widths.scss */
  .desk-two-fifths, .desk-four-tenths {
    width: 40%;
  }

  /* line 46, src/inuit.css/generic/_widths.scss */
  .desk-three-fifths, .desk-six-tenths {
    width: 60%;
  }

  /* line 47, src/inuit.css/generic/_widths.scss */
  .desk-four-fifths, .desk-eight-tenths {
    width: 80%;
  }

  /**
  * Sixths
  */
  /* line 53, src/inuit.css/generic/_widths.scss */
  .desk-one-sixth, .desk-two-twelfths {
    width: 16.666%;
  }

  /* line 57, src/inuit.css/generic/_widths.scss */
  .desk-five-sixths, .desk-ten-twelfths {
    width: 83.333%;
  }

  /**
  * Eighths
  */
  /* line 63, src/inuit.css/generic/_widths.scss */
  .desk-one-eighth {
    width: 12.5%;
  }

  /* line 65, src/inuit.css/generic/_widths.scss */
  .desk-three-eighths {
    width: 37.5%;
  }

  /* line 67, src/inuit.css/generic/_widths.scss */
  .desk-five-eighths {
    width: 62.5%;
  }

  /* line 69, src/inuit.css/generic/_widths.scss */
  .desk-seven-eighths {
    width: 87.5%;
  }

  /**
  * Tenths
  */
  /* line 75, src/inuit.css/generic/_widths.scss */
  .desk-one-tenth {
    width: 10%;
  }

  /* line 77, src/inuit.css/generic/_widths.scss */
  .desk-three-tenths {
    width: 30%;
  }

  /* line 81, src/inuit.css/generic/_widths.scss */
  .desk-seven-tenths {
    width: 70%;
  }

  /* line 83, src/inuit.css/generic/_widths.scss */
  .desk-nine-tenths {
    width: 90%;
  }

  /**
  * Twelfths
  */
  /* line 89, src/inuit.css/generic/_widths.scss */
  .desk-one-twelfth {
    width: 8.333%;
  }

  /* line 93, src/inuit.css/generic/_widths.scss */
  .desk-five-twelfths {
    width: 41.666%;
  }

  /* line 95, src/inuit.css/generic/_widths.scss */
  .desk-seven-twelfths {
    width: 58.333%;
  }

  /* line 99, src/inuit.css/generic/_widths.scss */
  .desk-eleven-twelfths {
    width: 91.666%;
  }
}
/**
 * If you have set the additional `$responsive-extra` variable to ‘true’ in
 * `_vars.scss` then you now have access to the following class available to
 * accomodate much larger screen resolutions.
 */
/* endif */
/*------------------------------------*\
    $PUSH
\*------------------------------------*/
/**
 * Push classes, to move grid items over to the right by certain amounts.
 */
/**
 * Whole
 */
/* line 13, src/inuit.css/generic/_push.scss */
.push--one-whole {
  left: 100%;
}

/**
 * Halves
 */
/* line 19, src/inuit.css/generic/_push.scss */
.push--one-half, .push--two-quarters, .push--three-sixths, .push--four-eighths, .push--five-tenths, .push--six-twelfths {
  left: 50%;
}

/**
 * Thirds
 */
/* line 25, src/inuit.css/generic/_push.scss */
.push--one-third, .push--two-sixths, .push--four-twelfths {
  left: 33.333%;
}

/* line 26, src/inuit.css/generic/_push.scss */
.push--two-thirds, .push--four-sixths, .push--eight-twelfths {
  left: 66.666%;
}

/**
 * Quarters
 */
/* line 32, src/inuit.css/generic/_push.scss */
.push--one-quarter, .push--two-eighths, .push--three-twelfths {
  left: 25%;
}

/* line 34, src/inuit.css/generic/_push.scss */
.push--three-quarters, .push--six-eighths, .push--nine-twelfths {
  left: 75%;
}

/**
 * Fifths
 */
/* line 40, src/inuit.css/generic/_push.scss */
.push--one-fifth, .push--two-tenths {
  left: 20%;
}

/* line 41, src/inuit.css/generic/_push.scss */
.push--two-fifths, .push--four-tenths {
  left: 40%;
}

/* line 42, src/inuit.css/generic/_push.scss */
.push--three-fifths, .push--six-tenths {
  left: 60%;
}

/* line 43, src/inuit.css/generic/_push.scss */
.push--four-fifths, .push--eight-tenths {
  left: 80%;
}

/**
 * Sixths
 */
/* line 49, src/inuit.css/generic/_push.scss */
.push--one-sixth, .push--two-twelfths {
  left: 16.666%;
}

/* line 53, src/inuit.css/generic/_push.scss */
.push--five-sixths, .push--ten-twelfths {
  left: 83.333%;
}

/**
 * Eighths
 */
/* line 59, src/inuit.css/generic/_push.scss */
.push--one-eighth {
  left: 12.5%;
}

/* line 61, src/inuit.css/generic/_push.scss */
.push--three-eighths {
  left: 37.5%;
}

/* line 63, src/inuit.css/generic/_push.scss */
.push--five-eighths {
  left: 62.5%;
}

/* line 65, src/inuit.css/generic/_push.scss */
.push--seven-eighths {
  left: 87.5%;
}

/**
 * Tenths
 */
/* line 71, src/inuit.css/generic/_push.scss */
.push--one-tenth {
  left: 10%;
}

/* line 73, src/inuit.css/generic/_push.scss */
.push--three-tenths {
  left: 30%;
}

/* line 77, src/inuit.css/generic/_push.scss */
.push--seven-tenths {
  left: 70%;
}

/* line 79, src/inuit.css/generic/_push.scss */
.push--nine-tenths {
  left: 90%;
}

/**
 * Twelfths
 */
/* line 85, src/inuit.css/generic/_push.scss */
.push--one-twelfth {
  left: 8.333%;
}

/* line 89, src/inuit.css/generic/_push.scss */
.push--five-twelfths {
  left: 41.666%;
}

/* line 91, src/inuit.css/generic/_push.scss */
.push--seven-twelfths {
  left: 58.333%;
}

/* line 95, src/inuit.css/generic/_push.scss */
.push--eleven-twelfths {
  left: 91.666%;
}

/**
 * Not a particularly great selector, but the DRYest way to do things.
 */
/* line 105, src/inuit.css/generic/_push.scss */
[class*="push--"] {
  position: relative;
}

@media only screen and (min-width: 481px) and (max-width: 939px) {
  /**
   * Whole
   */
  /* line 13, src/inuit.css/generic/_push.scss */
  .push--lap-one-whole {
    left: 100%;
  }

  /**
   * Halves
   */
  /* line 19, src/inuit.css/generic/_push.scss */
  .push--lap-one-half, .push--lap-two-quarters, .push--lap-three-sixths, .push--lap-four-eighths, .push--lap-five-tenths, .push--lap-six-twelfths {
    left: 50%;
  }

  /**
   * Thirds
   */
  /* line 25, src/inuit.css/generic/_push.scss */
  .push--lap-one-third, .push--lap-two-sixths, .push--lap-four-twelfths {
    left: 33.333%;
  }

  /* line 26, src/inuit.css/generic/_push.scss */
  .push--lap-two-thirds, .push--lap-four-sixths, .push--lap-eight-twelfths {
    left: 66.666%;
  }

  /**
   * Quarters
   */
  /* line 32, src/inuit.css/generic/_push.scss */
  .push--lap-one-quarter, .push--lap-two-eighths, .push--lap-three-twelfths {
    left: 25%;
  }

  /* line 34, src/inuit.css/generic/_push.scss */
  .push--lap-three-quarters, .push--lap-six-eighths, .push--lap-nine-twelfths {
    left: 75%;
  }

  /**
   * Fifths
   */
  /* line 40, src/inuit.css/generic/_push.scss */
  .push--lap-one-fifth, .push--lap-two-tenths {
    left: 20%;
  }

  /* line 41, src/inuit.css/generic/_push.scss */
  .push--lap-two-fifths, .push--lap-four-tenths {
    left: 40%;
  }

  /* line 42, src/inuit.css/generic/_push.scss */
  .push--lap-three-fifths, .push--lap-six-tenths {
    left: 60%;
  }

  /* line 43, src/inuit.css/generic/_push.scss */
  .push--lap-four-fifths, .push--lap-eight-tenths {
    left: 80%;
  }

  /**
   * Sixths
   */
  /* line 49, src/inuit.css/generic/_push.scss */
  .push--lap-one-sixth, .push--lap-two-twelfths {
    left: 16.666%;
  }

  /* line 53, src/inuit.css/generic/_push.scss */
  .push--lap-five-sixths, .push--lap-ten-twelfths {
    left: 83.333%;
  }

  /**
   * Eighths
   */
  /* line 59, src/inuit.css/generic/_push.scss */
  .push--lap-one-eighth {
    left: 12.5%;
  }

  /* line 61, src/inuit.css/generic/_push.scss */
  .push--lap-three-eighths {
    left: 37.5%;
  }

  /* line 63, src/inuit.css/generic/_push.scss */
  .push--lap-five-eighths {
    left: 62.5%;
  }

  /* line 65, src/inuit.css/generic/_push.scss */
  .push--lap-seven-eighths {
    left: 87.5%;
  }

  /**
   * Tenths
   */
  /* line 71, src/inuit.css/generic/_push.scss */
  .push--lap-one-tenth {
    left: 10%;
  }

  /* line 73, src/inuit.css/generic/_push.scss */
  .push--lap-three-tenths {
    left: 30%;
  }

  /* line 77, src/inuit.css/generic/_push.scss */
  .push--lap-seven-tenths {
    left: 70%;
  }

  /* line 79, src/inuit.css/generic/_push.scss */
  .push--lap-nine-tenths {
    left: 90%;
  }

  /**
   * Twelfths
   */
  /* line 85, src/inuit.css/generic/_push.scss */
  .push--lap-one-twelfth {
    left: 8.333%;
  }

  /* line 89, src/inuit.css/generic/_push.scss */
  .push--lap-five-twelfths {
    left: 41.666%;
  }

  /* line 91, src/inuit.css/generic/_push.scss */
  .push--lap-seven-twelfths {
    left: 58.333%;
  }

  /* line 95, src/inuit.css/generic/_push.scss */
  .push--lap-eleven-twelfths {
    left: 91.666%;
  }
}
/*------------------------------------*\
    $PULL
\*------------------------------------*/
/**
 * Pull classes, to move grid items over to the right by certain amounts.
 */
/*------------------------------------*\
    $BRAND
\*------------------------------------*/
/**
 * `.brand` is a quick and simple way to apply your brand face and/or color to
 * any element using a handy helper class.
 */
/* line 8, src/inuit.css/generic/_brand.scss */
.brand {
  font-family: Helvetica Neue, sans-serif!important;
  color: #4a8ec2!important;
}

/* line 12, src/inuit.css/generic/_brand.scss */
.brand-face {
  font-family: Helvetica Neue, sans-serif!important;
}

/* line 15, src/inuit.css/generic/_brand.scss */
.brand-color,
.brand-colour {
  color: #4a8ec2!important;
}

/*------------------------------------*\
    $HELPER
\*------------------------------------*/
/**
 * A series of helper classes to use arbitrarily. Only use a helper class if an
 * element/component doesn’t already have a class to which you could apply this
 * styling, e.g. if you need to float `.main-nav` left then add `float:left;` to
 * that ruleset as opposed to adding the `.float--left` class to the markup.
 *
 * A lot of these classes carry `!important` as you will always want them to win
 * out over other selectors.
 */
/**
 * Add/remove floats
 */
/* line 18, src/inuit.css/generic/_helper.scss */
.float--right {
  float: right !important;
}

/* line 19, src/inuit.css/generic/_helper.scss */
.float--left {
  float: left !important;
}

/* line 20, src/inuit.css/generic/_helper.scss */
.float--none {
  float: none !important;
}

/**
 * Text alignment
 */
/* line 26, src/inuit.css/generic/_helper.scss */
.text--left {
  text-align: left  !important;
}

/* line 27, src/inuit.css/generic/_helper.scss */
.text--center {
  text-align: center !important;
}

/* line 28, src/inuit.css/generic/_helper.scss */
.text--right {
  text-align: right !important;
}

/**
 * Font weights
 */
/* line 34, src/inuit.css/generic/_helper.scss */
.weight--light {
  font-weight: 300 !important;
}

/* line 35, src/inuit.css/generic/_helper.scss */
.weight--normal {
  font-weight: 400 !important;
}

/* line 36, src/inuit.css/generic/_helper.scss */
.weight--semibold {
  font-weight: 600 !important;
}

/**
 * Add/remove margins
 */
/* line 42, src/inuit.css/generic/_helper.scss */
.push {
  margin: 24px !important;
}

/* line 43, src/inuit.css/generic/_helper.scss */
.push--top {
  margin-top: 24px !important;
}

/* line 44, src/inuit.css/generic/_helper.scss */
.push--right {
  margin-right: 24px !important;
}

/* line 45, src/inuit.css/generic/_helper.scss */
.push--bottom {
  margin-bottom: 24px !important;
}

/* line 46, src/inuit.css/generic/_helper.scss */
.push--left {
  margin-left: 24px !important;
}

/* line 47, src/inuit.css/generic/_helper.scss */
.push--ends {
  margin-top: 24px !important;
  margin-bottom: 24px !important;
}

/* line 48, src/inuit.css/generic/_helper.scss */
.push--sides {
  margin-right: 24px !important;
  margin-left: 24px !important;
}

/* line 50, src/inuit.css/generic/_helper.scss */
.push-half {
  margin: 12px !important;
}

/* line 51, src/inuit.css/generic/_helper.scss */
.push-half--top {
  margin-top: 12px !important;
}

/* line 52, src/inuit.css/generic/_helper.scss */
.push-half--right {
  margin-right: 12px !important;
}

/* line 53, src/inuit.css/generic/_helper.scss */
.push-half--bottom {
  margin-bottom: 12px !important;
}

/* line 54, src/inuit.css/generic/_helper.scss */
.push-half--left {
  margin-left: 12px !important;
}

/* line 55, src/inuit.css/generic/_helper.scss */
.push-half--ends {
  margin-top: 12px !important;
  margin-bottom: 12px !important;
}

/* line 56, src/inuit.css/generic/_helper.scss */
.push-half--sides {
  margin-right: 12px !important;
  margin-left: 12px !important;
}

/* line 58, src/inuit.css/generic/_helper.scss */
.flush {
  margin: 0 !important;
}

/* line 59, src/inuit.css/generic/_helper.scss */
.flush--top {
  margin-top: 0 !important;
}

/* line 60, src/inuit.css/generic/_helper.scss */
.flush--right {
  margin-right: 0 !important;
}

/* line 61, src/inuit.css/generic/_helper.scss */
.flush--bottom {
  margin-bottom: 0 !important;
}

/* line 62, src/inuit.css/generic/_helper.scss */
.flush--left {
  margin-left: 0 !important;
}

/* line 63, src/inuit.css/generic/_helper.scss */
.flush--ends {
  margin-top: 0 !important;
  margin-bottom: 0 !important;
}

/* line 64, src/inuit.css/generic/_helper.scss */
.flush--sides {
  margin-right: 0 !important;
  margin-left: 0 !important;
}

/**
 * Add/remove paddings
 */
/* line 70, src/inuit.css/generic/_helper.scss */
.soft {
  padding: 24px !important;
}

/* line 71, src/inuit.css/generic/_helper.scss */
.soft--top {
  padding-top: 24px !important;
}

/* line 72, src/inuit.css/generic/_helper.scss */
.soft--right {
  padding-right: 24px !important;
}

/* line 73, src/inuit.css/generic/_helper.scss */
.soft--bottom {
  padding-bottom: 24px !important;
}

/* line 74, src/inuit.css/generic/_helper.scss */
.soft--left {
  padding-left: 24px !important;
}

/* line 75, src/inuit.css/generic/_helper.scss */
.soft--ends {
  padding-top: 24px !important;
  padding-bottom: 24px !important;
}

/* line 76, src/inuit.css/generic/_helper.scss */
.soft--sides {
  padding-right: 24px !important;
  padding-left: 24px !important;
}

/* line 78, src/inuit.css/generic/_helper.scss */
.soft-half {
  padding: 12px !important;
}

/* line 79, src/inuit.css/generic/_helper.scss */
.soft-half--top {
  padding-top: 12px !important;
}

/* line 80, src/inuit.css/generic/_helper.scss */
.soft-half--right {
  padding-right: 12px !important;
}

/* line 81, src/inuit.css/generic/_helper.scss */
.soft-half--bottom {
  padding-bottom: 12px !important;
}

/* line 82, src/inuit.css/generic/_helper.scss */
.soft-half--left {
  padding-left: 12px !important;
}

/* line 83, src/inuit.css/generic/_helper.scss */
.soft-half--ends {
  padding-top: 12px !important;
  padding-bottom: 12px !important;
}

/* line 84, src/inuit.css/generic/_helper.scss */
.soft-half--sides {
  padding-right: 12px !important;
  padding-left: 12px !important;
}

/* line 86, src/inuit.css/generic/_helper.scss */
.hard {
  padding: 0 !important;
}

/* line 87, src/inuit.css/generic/_helper.scss */
.hard--top {
  padding-top: 0 !important;
}

/* line 88, src/inuit.css/generic/_helper.scss */
.hard--right {
  padding-right: 0 !important;
}

/* line 89, src/inuit.css/generic/_helper.scss */
.hard--bottom {
  padding-bottom: 0 !important;
}

/* line 90, src/inuit.css/generic/_helper.scss */
.hard--left {
  padding-left: 0 !important;
}

/* line 91, src/inuit.css/generic/_helper.scss */
.hard--ends {
  padding-top: 0 !important;
  padding-bottom: 0 !important;
}

/* line 92, src/inuit.css/generic/_helper.scss */
.hard--sides {
  padding-right: 0 !important;
  padding-left: 0 !important;
}

/**
 * Pull items full width of `.island` parents.
 */
/* line 98, src/inuit.css/generic/_helper.scss */
.full-bleed {
  margin-right: -24px !important;
  margin-left: -24px !important;
}
/* line 102, src/inuit.css/generic/_helper.scss */
.islet .full-bleed {
  margin-right: -12px !important;
  margin-left: -12px !important;
}

/**
 * Add a help cursor to any element that gives the user extra information on
 * `:hover`.
 */
/* line 113, src/inuit.css/generic/_helper.scss */
.informative {
  cursor: help !important;
}

/**
 * Mute an object by reducing its opacity.
 */
/* line 121, src/inuit.css/generic/_helper.scss */
.muted {
  opacity: 0.5 !important;
  filter: alpha(opacity=50) !important;
}

/**
 * Align items to the right where they imply progression/movement forward, e.g.:
 *
   <p class=proceed><a href=#>Read more...</a></p>
 *
 */
/* line 133, src/inuit.css/generic/_helper.scss */
.proceed {
  text-align: right !important;
}

/**
 * Add a right-angled quote to links that imply movement, e.g.:
 *
   <a href=# class=go>Read more</a>
 *
 */
/* line 144, src/inuit.css/generic/_helper.scss */
.go:after {
  content: " " "»" !important;
}

/**
 * Add a left-angled quote to links that imply backwards movement, e.g.:
 *
   <a href=# class=back>Return</a>
 *
 */
/* line 155, src/inuit.css/generic/_helper.scss */
.back:before {
  content: "«" " " !important;
}

/**
 * Apply capital case to an element (usually a `strong`).
 */
/* line 163, src/inuit.css/generic/_helper.scss */
.caps {
  text-transform: uppercase !important;
}

/**
 * Hide content off-screen without resorting to `display:none;`, also provide
 * breakpoint specific hidden elements.
 */
/* line 182, src/inuit.css/generic/_helper.scss */
.accessibility,
.visuallyhidden {
  border: 0 !important;
  clip: rect(0 0 0 0) !important;
  height: 1px !important;
  margin: -1px !important;
  overflow: hidden !important;
  padding: 0 !important;
  position: absolute !important;
  width: 1px !important;
}

@media only screen and (max-width: 480px) {
  /* line 189, src/inuit.css/generic/_helper.scss */
  .accessibility--palm,
  .visuallyhidden--palm {
    border: 0 !important;
    clip: rect(0 0 0 0) !important;
    height: 1px !important;
    margin: -1px !important;
    overflow: hidden !important;
    padding: 0 !important;
    position: absolute !important;
    width: 1px !important;
  }
}
@media only screen and (min-width: 481px) and (max-width: 939px) {
  /* line 189, src/inuit.css/generic/_helper.scss */
  .accessibility--lap,
  .visuallyhidden--lap {
    border: 0 !important;
    clip: rect(0 0 0 0) !important;
    height: 1px !important;
    margin: -1px !important;
    overflow: hidden !important;
    padding: 0 !important;
    position: absolute !important;
    width: 1px !important;
  }
}
@media only screen and (min-width: 481px) {
  /* line 189, src/inuit.css/generic/_helper.scss */
  .accessibility--lap-and-up,
  .visuallyhidden--lap-and-up {
    border: 0 !important;
    clip: rect(0 0 0 0) !important;
    height: 1px !important;
    margin: -1px !important;
    overflow: hidden !important;
    padding: 0 !important;
    position: absolute !important;
    width: 1px !important;
  }
}
@media only screen and (max-width: 939px) {
  /* line 189, src/inuit.css/generic/_helper.scss */
  .accessibility--portable,
  .visuallyhidden--portable {
    border: 0 !important;
    clip: rect(0 0 0 0) !important;
    height: 1px !important;
    margin: -1px !important;
    overflow: hidden !important;
    padding: 0 !important;
    position: absolute !important;
    width: 1px !important;
  }
}
@media only screen and (min-width: 940px) {
  /* line 189, src/inuit.css/generic/_helper.scss */
  .accessibility--desk,
  .visuallyhidden--desk {
    border: 0 !important;
    clip: rect(0 0 0 0) !important;
    height: 1px !important;
    margin: -1px !important;
    overflow: hidden !important;
    padding: 0 !important;
    position: absolute !important;
    width: 1px !important;
  }
}
@media only screen and (min-width: 1200px) {
  /* line 189, src/inuit.css/generic/_helper.scss */
  .accessibility--desk-wide,
  .visuallyhidden--desk-wide {
    border: 0 !important;
    clip: rect(0 0 0 0) !important;
    height: 1px !important;
    margin: -1px !important;
    overflow: hidden !important;
    padding: 0 !important;
    position: absolute !important;
    width: 1px !important;
  }
}
/* endif */
/*------------------------------------*\
    $PAGE
\*------------------------------------*/
/* line 5, src/ui/_page.scss */
html {
  -webkit-text-size-adjust: none;
  -moz-text-size-adjust: none;
  -ms-text-size-adjust: none;
  -o-text-size-adjust: none;
  text-size-adjust: none;
}

/**
 * Page-level wrapper.
 */
/* line 12, src/ui/_page.scss */
.wrapper {
  max-width: 1000px;
  margin-right: auto;
  margin-left: auto;
  padding: 0 50px;
}
@media only screen and (min-width: 481px) and (max-width: 939px) {
  /* line 12, src/ui/_page.scss */
  .wrapper {
    padding: 0 25px;
  }
}
@media only screen and (max-width: 480px) {
  /* line 12, src/ui/_page.scss */
  .wrapper {
    padding: 0 10px;
  }
}

/* line 28, src/ui/_page.scss */
.masthead {
  background-color: #cedecb;
  padding-top: 170px;
  padding-bottom: 50px;
  text-align: center;
}
@media only screen and (max-width: 939px) {
  /* line 28, src/ui/_page.scss */
  .masthead {
    height: auto;
    padding: 120px 0 30px;
  }
}
@media only screen and (max-width: 939px) {
  /* line 40, src/ui/_page.scss */
  .masthead h2 span, .masthead p span {
    display: inline;
  }
}
/* line 46, src/ui/_page.scss */
.masthead p {
  color: #194f58;
  font-family: "Alef", sans-serif;
  font-size: 18px;
  font-size: 1.125rem;
  line-height: 1.33333;
}
/* line 52, src/ui/_page.scss */
.masthead span {
  display: block;
}
/* line 57, src/ui/_page.scss */
.masthead .block-element a {
  color: #194f58;
  text-decoration: none;
}
/* line 61, src/ui/_page.scss */
.masthead .block-element a:hover {
  text-decoration: underline;
}
@media only screen and (max-width: 939px) {
  /* line 56, src/ui/_page.scss */
  .masthead .block-element {
    display: block;
  }
}

/* line 72, src/ui/_page.scss */
.hidden {
  display: none;
}

/* line 76, src/ui/_page.scss */
.content {
  padding: 80px 0;
}
@media only screen and (max-width: 480px) {
  /* line 76, src/ui/_page.scss */
  .content {
    padding: 50px 0;
  }
}
/* line 82, src/ui/_page.scss */
.content hr {
  border: 0;
  border-bottom-width: 2px;
  border-bottom-style: dotted;
  margin: 70px 0;
}
@media only screen and (min-width: 481px) and (max-width: 939px) {
  /* line 82, src/ui/_page.scss */
  .content hr {
    margin: 50px 0;
  }
}
@media only screen and (max-width: 480px) {
  /* line 82, src/ui/_page.scss */
  .content hr {
    margin: 35px 0;
  }
}

/*
 * HOME
 */
/* line 101, src/ui/_page.scss */
.masthead-home {
  background-image: url(../images/bgs/home-bg.jpg);
  background-repeat: no-repeat;
  background-position: center -102px;
  padding-bottom: 100px;
}
/* line 107, src/ui/_page.scss */
.masthead-home h1 {
  color: #194f58;
  font-family: "PT Sans Caption", sans-serif;
  margin-bottom: 10px;
  text-transform: uppercase;
  font-size: 60px;
  font-size: 3.75rem;
  line-height: 1.2;
}
@media only screen and (min-width: 481px) and (max-width: 939px) {
  /* line 107, src/ui/_page.scss */
  .masthead-home h1 {
    font-size: 40px;
    font-size: 2.5rem;
  }
}
@media only screen and (max-width: 480px) {
  /* line 107, src/ui/_page.scss */
  .masthead-home h1 {
    font-size: 26px;
    font-size: 1.625rem;
  }
}
/* line 123, src/ui/_page.scss */
.masthead-home h2 {
  color: #194f58;
  font-family: "Alef", sans-serif;
  font-weight: 400;
  margin-bottom: 30px;
  font-size: 18px;
  font-size: 1.125rem;
  line-height: 1.33333;
}
@media only screen and (max-width: 939px) {
  /* line 123, src/ui/_page.scss */
  .masthead-home h2 {
    font-size: 16px;
    font-size: 1rem;
  }
}
/* line 135, src/ui/_page.scss */
.masthead-home span {
  display: block;
}

/* line 141, src/ui/_page.scss */
.marketing h3 {
  color: #c94055;
  font-family: "Glegoo", serif;
  font-weight: 300;
  text-align: right;
  font-size: 85px;
  font-size: 5.3125rem;
}
@media only screen and (min-width: 481px) and (max-width: 939px) {
  /* line 141, src/ui/_page.scss */
  .marketing h3 {
    font-size: 70px;
    font-size: 4.375rem;
  }
}
@media only screen and (max-width: 480px) {
  /* line 141, src/ui/_page.scss */
  .marketing h3 {
    font-size: 40px;
    font-size: 2.5rem;
  }
}
@media only screen and (max-width: 939px) {
  /* line 141, src/ui/_page.scss */
  .marketing h3 {
    text-align: center;
  }
}
/* line 157, src/ui/_page.scss */
.marketing h3 span {
  display: block;
}
@media only screen and (max-width: 939px) {
  /* line 157, src/ui/_page.scss */
  .marketing h3 span {
    display: inline;
  }
}
@media only screen and (max-width: 939px) {
  /* line 165, src/ui/_page.scss */
  .marketing .description {
    text-align: center;
  }
}
/* line 171, src/ui/_page.scss */
.marketing h4 {
  color: #c94055;
  font-family: "PT Sans Caption", sans-serif;
  font-weight: 400;
  font-size: 32px;
  font-size: 2rem;
}
@media only screen and (max-width: 480px) {
  /* line 171, src/ui/_page.scss */
  .marketing h4 {
    font-size: 26px;
    font-size: 1.625rem;
  }
}
/* line 182, src/ui/_page.scss */
.marketing p {
  color: #194f58;
  font-family: "Alef", sans-serif;
  font-weight: 400;
  line-height: 1.4;
  font-size: 16px;
  font-size: 1rem;
}
/* line 190, src/ui/_page.scss */
.marketing a {
  color: #c94055;
  font-size: 18px;
  font-size: 1.125rem;
  line-height: 1.33333;
  font-family: "PT Sans Caption", sans-serif;
  font-weight: 400;
  text-decoration: none;
  text-transform: uppercase;
}
/* line 198, src/ui/_page.scss */
.marketing a:hover {
  text-decoration: underline;
}
/* line 203, src/ui/_page.scss */
.marketing .mkt-img {
  text-align: center;
}
@media only screen and (max-width: 480px) {
  /* line 203, src/ui/_page.scss */
  .marketing .mkt-img {
    height: 80%;
  }
  /* line 208, src/ui/_page.scss */
  .marketing .mkt-img img {
    max-width: 30%;
  }
}
@media only screen and (max-width: 939px) {
  /* line 203, src/ui/_page.scss */
  .marketing .mkt-img {
    text-align: center;
  }
  /* line 215, src/ui/_page.scss */
  .marketing .mkt-img img {
    margin-bottom: 25px;
  }
}
/* line 221, src/ui/_page.scss */
.marketing hr {
  border-color: #194f58;
}

/* line 226, src/ui/_page.scss */
.contact-us {
  background-color: #194f58;
  padding: 70px 0;
  text-align: center;
}
@media only screen and (max-width: 480px) {
  /* line 226, src/ui/_page.scss */
  .contact-us {
    padding: 35px 0;
  }
}
@media only screen and (max-width: 939px) {
  /* line 234, src/ui/_page.scss */
  .contact-us span {
    display: block;
  }
}
/* line 240, src/ui/_page.scss */
.contact-us h5 {
  color: #cedecb;
  font-family: "Glegoo", serif;
  font-weight: 300;
  margin-bottom: 5px;
  font-size: 35px;
  font-size: 2.1875rem;
  line-height: 1.37143;
}
@media only screen and (max-width: 480px) {
  /* line 240, src/ui/_page.scss */
  .contact-us h5 {
    font-size: 25px;
    font-size: 1.5625rem;
  }
}
/* line 251, src/ui/_page.scss */
.contact-us a {
  color: #fff;
  font-family: "PT Sans Caption", sans-serif;
  font-weight: 600;
  text-decoration: none;
  text-transform: uppercase;
  font-size: 45px;
  font-size: 2.8125rem;
  line-height: 1.06667;
}
@media only screen and (min-width: 481px) and (max-width: 939px) {
  /* line 251, src/ui/_page.scss */
  .contact-us a {
    font-size: 38px;
    font-size: 2.375rem;
    line-height: 1.26316;
  }
}
@media only screen and (max-width: 480px) {
  /* line 251, src/ui/_page.scss */
  .contact-us a {
    font-size: 25px;
    font-size: 1.5625rem;
    line-height: 1.92;
  }
}
/* line 265, src/ui/_page.scss */
.contact-us a:hover {
  color: #cedecb;
}
/* line 269, src/ui/_page.scss */
.contact-us a img {
  display: inline-block;
  margin: -5px 0 0 20px;
  vertical-align: middle;
}
@media only screen and (max-width: 480px) {
  /* line 269, src/ui/_page.scss */
  .contact-us a img {
    margin-left: 10px;
  }
}

/*
 * CONSULTING
 */
/* line 285, src/ui/_page.scss */
.masthead-consulting img {
  margin-bottom: 46px;
}

/* line 290, src/ui/_page.scss */
.consulting {
  text-align: center;
}
/* line 293, src/ui/_page.scss */
.consulting hr {
  border-color: #cedecb;
}
@media only screen and (min-width: 940px) {
  /* line 297, src/ui/_page.scss */
  .consulting .areas {
    margin: 0 auto;
    width: 85%;
  }
}
/* line 303, src/ui/_page.scss */
.consulting .areas img {
  margin-bottom: 30px;
}
/* line 307, src/ui/_page.scss */
.consulting .areas h2 {
  color: #c94055;
  font-family: "PT Sans Caption", sans-serif;
  font-weight: 300;
  text-transform: uppercase;
  font-size: 30px;
  font-size: 1.875rem;
  line-height: 1.6;
}
/* line 315, src/ui/_page.scss */
.consulting .areas p {
  color: #194f58;
  font-family: "Alef", sans-serif;
  font-size: 16px;
  font-size: 1rem;
  line-height: 1.5;
}

/* line 323, src/ui/_page.scss */
.technologies {
  background-color: #cedecb;
  padding-top: 40px;
  text-align: center;
}
/* line 328, src/ui/_page.scss */
.technologies h3 {
  color: #194f58;
  font-family: "PT Sans Caption", sans-serif;
  font-weight: 300;
  text-transform: uppercase;
  font-size: 20px;
  font-size: 1.25rem;
  line-height: 1.2;
}
/* line 336, src/ui/_page.scss */
.technologies .image-container {
  line-height: 60px;
  margin-bottom: 40px;
}
/* line 340, src/ui/_page.scss */
.technologies .image-container img {
  display: inline-block;
  vertical-align: middle;
}

/*
 * ABOUT US
 */
/* line 350, src/ui/_page.scss */
.about-us {
  padding-bottom: 0;
}

/* line 356, src/ui/_page.scss */
.masthead-about-us img {
  margin-bottom: 80px;
}
@media only screen and (max-width: 939px) {
  /* line 356, src/ui/_page.scss */
  .masthead-about-us img {
    margin-bottom: 50px;
  }
}

/* line 364, src/ui/_page.scss */
.member {
  padding: 0 45px;
}
/* line 367, src/ui/_page.scss */
.member h2 {
  color: #c94055;
  font-family: "Glegoo", serif;
  font-weight: 300;
  font-size: 40px;
  font-size: 2.5rem;
  line-height: 1.2;
}
/* line 374, src/ui/_page.scss */
.member p {
  color: #194f58;
  font-family: "Alef", sans-serif;
  font-size: 16px;
  font-size: 1rem;
  line-height: 1.5;
}
/* line 382, src/ui/_page.scss */
.member .social a {
  color: #cedecb;
  margin-right: 14px;
  text-decoration: none;
  font-size: 25px;
  font-size: 1.5625rem;
}
/* line 388, src/ui/_page.scss */
.member .social a:hover {
  color: #194f58;
}
/* line 392, src/ui/_page.scss */
.member .social a:first-child {
  margin-top: 90px;
}
/* line 398, src/ui/_page.scss */
.member hr {
  border-color: #cedecb;
  margin: 0 0 50px;
}
@media only screen and (max-width: 480px) {
  /* line 403, src/ui/_page.scss */
  .member .member-pic {
    margin-top: 24px;
  }
}
@media only screen and (min-width: 481px) and (max-width: 939px) {
  /* line 403, src/ui/_page.scss */
  .member .member-pic {
    text-align: right;
  }
}
/* line 413, src/ui/_page.scss */
.member img {
  display: inline-block;
  vertical-align: middle;
}

/*
 * CONTACT
 */
/* line 424, src/ui/_page.scss */
.masthead-contact img {
  margin-bottom: 80px;
}
@media only screen and (max-width: 939px) {
  /* line 424, src/ui/_page.scss */
  .masthead-contact img {
    margin-bottom: 50px;
  }
}

/* line 434, src/ui/_page.scss */
.contact .contacts {
  max-width: 505px;
  position: relative;
}
/* line 438, src/ui/_page.scss */
.contact .contacts a {
  color: #fff;
  text-decoration: none;
}
/* line 442, src/ui/_page.scss */
.contact .contacts a:hover {
  text-decoration: underline;
}
/* line 447, src/ui/_page.scss */
.contact .contacts > a img {
  display: inline-block;
  vertical-align: middle;
}
/* line 452, src/ui/_page.scss */
.contact .contacts .shade {
  display: none;
}
@media only screen and (min-width: 940px) {
  /* line 434, src/ui/_page.scss */
  .contact .contacts {
    overflow: hidden;
    max-width: 505px;
    padding-bottom: 25px;
  }
  /* line 460, src/ui/_page.scss */
  .contact .contacts .shade {
    bottom: 0;
    display: block;
    left: 0;
    position: absolute;
  }
}
/* line 468, src/ui/_page.scss */
.contact .contacts .icon-briefcase {
  padding-right: 10px;
  font-size: 12px;
  font-size: 0.75rem;
  line-height: 2;
}
/* line 473, src/ui/_page.scss */
.contact .contacts .icon-mail,
.contact .contacts .icon-mobile {
  font-size: 16px;
  font-size: 1rem;
  line-height: 1.5;
}
/* line 478, src/ui/_page.scss */
.contact .contacts .icon-mail {
  padding-right: 10px;
}
/* line 482, src/ui/_page.scss */
.contact .contacts .icon-mobile {
  padding-right: 13px;
  padding-left: 3px;
}
/* line 489, src/ui/_page.scss */
.contact .contacts-container {
  background-color: #194f58;
  color: #fff;
  padding: 14px 24px;
}
/* line 494, src/ui/_page.scss */
.contact .contacts-container p {
  font-family: "Glegoo", serif;
  margin-bottom: 0;
  font-size: 14px;
  font-size: 0.875rem;
  line-height: 1.71429;
}
/* line 500, src/ui/_page.scss */
.contact .contacts-container h2 {
  font-family: "Alef", sans-serif;
  margin-bottom: 0;
  font-size: 16px;
  font-size: 1rem;
  line-height: 1.5;
}
/* line 506, src/ui/_page.scss */
.contact .contacts-container span {
  font-family: "Alef", sans-serif;
}
/* line 510, src/ui/_page.scss */
.contact .contacts-container .address {
  margin-bottom: 16px;
  padding-left: 27px;
}
/* line 516, src/ui/_page.scss */
.contact form {
  margin: 20px 0 0 30px;
  text-align: center;
}
@media only screen and (max-width: 939px) {
  /* line 516, src/ui/_page.scss */
  .contact form {
    margin: 40px 0 0;
  }
}
/* line 524, src/ui/_page.scss */
.contact fieldset {
  border: 0;
  padding: 0;
  text-align: left;
}
/* line 530, src/ui/_page.scss */
.contact legend {
  color: #194f58;
  font-family: "PT Sans Caption", sans-serif;
  font-weight: 700;
  margin-bottom: 14px;
  text-transform: uppercase;
  font-size: 30px;
  font-size: 1.875rem;
  line-height: 1.6;
}
/* line 539, src/ui/_page.scss */
.contact input, .contact textarea {
  border: 1px solid #cedecb;
  border-radius: 4px;
  -webkit-box-shadow: inset 0 1px 1px #e5ebe5;
  box-shadow: inset 0 1px 1px #e5ebe5;
  color: #194f58;
  font-family: "Alef", sans-serif;
  height: 46px;
  margin-bottom: 18px;
  padding: 12px 16px;
  -webkit-transition: border-color ease-in-out .15s,box-shadow ease-in-out .15s;
  transition: border-color ease-in-out .15s,box-shadow ease-in-out .15s;
  width: 100%;
  font-size: 16px;
  font-size: 1rem;
  line-height: 1.5;
}
/* line 554, src/ui/_page.scss */
.contact input:focus, .contact textarea:focus {
  border-color: #194f58;
  border-color: rgba(25, 79, 88, 0.4);
  outline: 0;
  -webkit-box-shadow: inset 0 1px 1px rgba(25, 79, 88, 0.075), 0 0 4px rgba(25, 79, 88, 0.6);
  box-shadow: inset 0 1px 1px rgba(25, 79, 88, 0.075), 0 0 4px rgba(25, 79, 88, 0.6);
}
/* line 563, src/ui/_page.scss */
.contact textarea {
  height: auto;
  overflow: auto;
}
/* line 568, src/ui/_page.scss */
.contact button {
  padding-left: 30px;
  padding-right: 30px;
  text-align: center;
}

/*
 * Work
 */
/* line 579, src/ui/_page.scss */
.masthead-work h1 {
  color: #c94055;
  font-family: "PT Sans Caption", sans-serif;
  font-size: 3rem;
  font-weight: 400;
  text-transform: uppercase;
}

/* line 588, src/ui/_page.scss */
.work {
  color: #fff;
  margin: 0 auto;
  max-width: 1200px;
}
@media only screen and (min-width: 481px) and (max-width: 939px) {
  /* line 588, src/ui/_page.scss */
  .work {
    padding: 0 25px;
  }
}
@media only screen and (max-width: 480px) {
  /* line 588, src/ui/_page.scss */
  .work {
    padding: 0;
  }
}
/* line 601, src/ui/_page.scss */
.work .block {
  position: relative;
  display: inline-block;
  vertical-align: top;
  min-width: 18rem;
  width: 30%;
  margin: 1rem;
}
/* line 609, src/ui/_page.scss */
.work .block img {
  left: 0;
  position: absolute;
  top: 0;
  z-index: -1;
  -webkit-background-cover: cover;
  -moz-background-cover: cover;
  -ms-background-cover: cover;
  -o-background-cover: cover;
  background-cover: cover;
}
/* line 618, src/ui/_page.scss */
.work .work-item {
  height: 18rem;
  background-size: cover;
  background-position: center;
  overflow: hidden;
  text-align: left;
}
/* line 627, src/ui/_page.scss */
.work .work-item:hover > .work-info {
  top: 0;
}
/* line 632, src/ui/_page.scss */
.work .work-item h2 {
  font-family: "PT Sans Caption", sans-serif;
  font-weight: 400;
  text-transform: uppercase;
  -webkit-transition: all 0.5s ease;
  transition: all 0.5s ease;
}
/* line 640, src/ui/_page.scss */
.work .work-item a {
  text-decoration: none;
  color: #194f58;
}
/* line 645, src/ui/_page.scss */
.work .work-item p {
  font-family: "PT Sans Caption", sans-serif;
}
/* line 649, src/ui/_page.scss */
.work .work-item .work-info {
  position: absolute;
  left: 0;
  top: 100%;
  width: 100%;
  height: 100%;
  padding: 50px 10px 10px;
  text-align: center;
  color: #194f58;
  background-color: #cedecb;
  -webkit-transition: all 0.5s ease;
  transition: all 0.5s ease;
}
/* line 663, src/ui/_page.scss */
.work .work-item ul {
  position: absolute;
  bottom: 0;
  right: 0;
  margin-right: 20px;
  margin-bottom: 15px;
  list-style-type: none;
}
/* line 672, src/ui/_page.scss */
.work .work-item li {
  display: inline-block;
  margin: 0 6px;
}
/* line 676, src/ui/_page.scss */
.work .work-item li a {
  text-decoration: none;
  color: #194f58;
  font-size: 22px;
}

/*** Single Work ***/
/* line 688, src/ui/_page.scss */
.post .work {
  color: #000;
}

/*------------------------------------*\
    $PAGE-HEAD
\*------------------------------------*/
/* line 5, src/ui/_page-head.scss */
.main-header {
  left: auto;
  padding-top: 22px;
  position: absolute;
  right: auto;
  width: 100%;
}
@media only screen and (max-width: 939px) {
  /* line 5, src/ui/_page-head.scss */
  .main-header {
    background: #194f58;
    padding: 0;
  }
}

@media only screen and (max-width: 939px) {
  /* line 17, src/ui/_page-head.scss */
  .main-header nav {
    float: right;
    margin-top: 10px;
  }
}
/* line 25, src/ui/_page-head.scss */
.main-header nav ul {
  list-style: none;
  margin: 0;
}
@media only screen and (max-width: 939px) {
  /* line 25, src/ui/_page-head.scss */
  .main-header nav ul {
    background-color: #194f58;
    display: none;
    opacity: 0;
    padding: 10px 15px;
    position: absolute;
    right: 0;
    top: 56px;
    width: 100%;
  }
}
/* line 40, src/ui/_page-head.scss */
.main-header nav li {
  display: inline-block;
  margin-left: 100px;
}
@media only screen and (max-width: 939px) {
  /* line 40, src/ui/_page-head.scss */
  .main-header nav li {
    border-top: 1px solid #cedecb;
    display: block;
    margin-left: 0;
    padding: 10px;
    width: 100%;
  }
  /* line 51, src/ui/_page-head.scss */
  .main-header nav li:first-child {
    border-top: 0;
  }
}
/* line 56, src/ui/_page-head.scss */
.main-header nav li:first-child {
  margin-left: 0;
}
/* line 59, src/ui/_page-head.scss */
.main-header nav li:first-child + li {
  margin-right: 100px;
}
@media only screen and (min-width: 481px) and (max-width: 939px) {
  /* line 59, src/ui/_page-head.scss */
  .main-header nav li:first-child + li {
    margin-right: 0;
  }
}
/* line 68, src/ui/_page-head.scss */
.main-header nav a {
  color: #c94055;
  font-family: "Glegoo", serif;
  font-style: 18px;
  text-decoration: none;
  text-transform: uppercase;
}
/* line 75, src/ui/_page-head.scss */
.main-header nav a:hover, .main-header nav a.active {
  text-decoration: underline;
}
@media only screen and (max-width: 939px) {
  /* line 68, src/ui/_page-head.scss */
  .main-header nav a {
    color: #cedecb;
  }
}

/* line 86, src/ui/_page-head.scss */
.header-container {
  padding: 0 100px;
  position: relative;
  text-align: center;
}
@media only screen and (max-width: 939px) {
  /* line 86, src/ui/_page-head.scss */
  .header-container {
    padding: 0 10px;
  }
}
/* line 95, src/ui/_page-head.scss */
.header-container .logo {
  display: inline-block;
  margin-top: -35px;
}
@media only screen and (max-width: 939px) {
  /* line 95, src/ui/_page-head.scss */
  .header-container .logo {
    float: left;
    margin: 0;
    width: 60px;
  }
}
@media only screen and (min-width: 940px) {
  /* line 105, src/ui/_page-head.scss */
  .header-container .logo:hover {
    border-radius: 100%;
    -moz-box-shadow: #194f58 0 0 1em;
    -webkit-box-shadow: #194f58 0 0 1em;
    box-shadow: #194f58 0 0 1em;
  }
}
/* line 111, src/ui/_page-head.scss */
.header-container .logo img {
  vertical-align: middle;
}

/* line 117, src/ui/_page-head.scss */
.toggle {
  display: none;
}
@media only screen and (max-width: 939px) {
  /* line 117, src/ui/_page-head.scss */
  .toggle {
    cursor: pointer;
    display: block;
    position: relative;
    -webkit-touch-callout: none;
    -webkit-user-select: none;
    user-select: none;
  }
  /* line 127, src/ui/_page-head.scss */
  .toggle:after {
    background: #cedecb;
    -webkit-box-sizing: border-box;
    -moz-box-sizing: border-box;
    box-sizing: border-box;
    border: 1px solid #cedecb;
    -webkit-border-radius: 2px;
    border-radius: 2px;
    color: #194f58;
    content: attr(data-open);
    display: block;
    font-size: 12px;
    font-weight: 600;
    padding: 10px 20px;
    text-align: center;
    -webkit-transition: all .2s linear;
    -moz-transition: all .2s linear;
    -o-transition: all .2s linear;
    transition: all .2s linear;
  }
  /* line 149, src/ui/_page-head.scss */
  .toggle:hover:after {
    background: none;
    color: #cedecb;
  }
}

/* line 157, src/ui/_page-head.scss */
#toggle {
  display: none;
}
@media only screen and (max-width: 939px) {
  /* line 162, src/ui/_page-head.scss */
  #toggle:checked + nav ul {
    display: block;
    opacity: 1;
  }
  /* line 167, src/ui/_page-head.scss */
  #toggle:checked + nav .toggle:after {
    background: none;
    color: #cedecb;
    content: attr(data-close);
  }
}

/*------------------------------------*\
    $PAGE-FOOT
\*------------------------------------*/
/* line 5, src/ui/_page-foot.scss */
.main-footer {
  background-color: #c94055;
  padding: 60px 0 20px 0;
  position: relative;
}
/* line 10, src/ui/_page-foot.scss */
.main-footer ul {
  list-style: none;
  margin: 0;
}
/* line 14, src/ui/_page-foot.scss */
.main-footer ul li {
  display: inline-block;
}
/* line 18, src/ui/_page-foot.scss */
.main-footer ul a {
  text-decoration: none;
}
@media only screen and (max-width: 939px) {
  /* line 23, src/ui/_page-foot.scss */
  .main-footer nav {
    text-align: center;
  }
}
/* line 28, src/ui/_page-foot.scss */
.main-footer nav li {
  min-width: 104px;
}
@media only screen and (min-width: 481px) and (max-width: 939px) {
  /* line 28, src/ui/_page-foot.scss */
  .main-footer nav li {
    margin-right: 30px;
  }
}
@media only screen and (max-width: 480px) {
  /* line 28, src/ui/_page-foot.scss */
  .main-footer nav li {
    min-width: 0;
    margin-right: 15px;
  }
}
/* line 38, src/ui/_page-foot.scss */
.main-footer nav li:first-child, .main-footer nav li:first-child + li + li {
  margin-right: 60px;
}
@media only screen and (min-width: 481px) and (max-width: 939px) {
  /* line 38, src/ui/_page-foot.scss */
  .main-footer nav li:first-child, .main-footer nav li:first-child + li + li {
    margin-right: 30px;
  }
}
@media only screen and (max-width: 480px) {
  /* line 38, src/ui/_page-foot.scss */
  .main-footer nav li:first-child, .main-footer nav li:first-child + li + li {
    margin-right: 15px;
  }
}
/* line 48, src/ui/_page-foot.scss */
.main-footer nav li:first-child:before, .main-footer nav li:first-child + li:before {
  border-top: 2px solid #fff;
  content: '';
  display: block;
  margin-top: 0px;
  padding-top: 5px;
  width: 16px;
}
@media only screen and (max-width: 939px) {
  /* line 48, src/ui/_page-foot.scss */
  .main-footer nav li:first-child:before, .main-footer nav li:first-child + li:before {
    display: none;
  }
}
/* line 61, src/ui/_page-foot.scss */
.main-footer nav a {
  color: #fff;
  font-family: "Glegoo", serif;
  text-transform: uppercase;
  font-size: 15px;
  font-size: 0.9375rem;
}
@media only screen and (max-width: 480px) {
  /* line 61, src/ui/_page-foot.scss */
  .main-footer nav a {
    font-size: 12px;
    font-size: 0.75rem;
  }
}
/* line 70, src/ui/_page-foot.scss */
.main-footer nav a:hover, .main-footer nav a.active {
  text-decoration: underline;
}
@media only screen and (max-width: 939px) {
  /* line 77, src/ui/_page-foot.scss */
  .main-footer .logo {
    display: none;
  }
}
/* line 84, src/ui/_page-foot.scss */
.main-footer .social {
  padding-top: 10px;
  text-align: right;
}
@media only screen and (max-width: 939px) {
  /* line 84, src/ui/_page-foot.scss */
  .main-footer .social {
    text-align: center;
  }
}
/* line 91, src/ui/_page-foot.scss */
.main-footer .social li {
  margin-left: 50px;
}
/* line 94, src/ui/_page-foot.scss */
.main-footer .social li:first-child {
  margin-left: 0;
}
/* line 99, src/ui/_page-foot.scss */
.main-footer .social a {
  color: #fff;
  font-size: 25px;
  font-size: 1.5625rem;
}
/* line 103, src/ui/_page-foot.scss */
.main-footer .social a:hover {
  color: #194f58;
}
/* line 109, src/ui/_page-foot.scss */
.main-footer .property {
  color: #fff;
  font-family: "PT Sans Caption", sans-serif;
  margin: 30px 0 0;
  text-align: center;
  font-size: 10px;
  font-size: 0.625rem;
}

@font-face {
  font-family: 'minus';
  src: url("../fonts/minus.eot");
  src: url("../fonts/minus.eot?#iefix") format("embedded-opentype"), url("../fonts/minus.woff") format("woff"), url("../fonts/minus.ttf") format("truetype"), url("../fonts/minus.svg#minus") format("svg");
  font-weight: normal;
  font-style: normal;
}
/* line 12, src/ui/_fonts.scss */
[class^="icon-"], [class*=" icon-"] {
  font-family: 'minus';
  speak: none;
  font-style: normal;
  font-weight: normal;
  font-variant: normal;
  text-transform: none;
  line-height: 1;
  /* Better Font Rendering =========== */
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

/* line 26, src/ui/_fonts.scss */
.icon-twitter:before {
  content: "\e608";
}

/* line 29, src/ui/_fonts.scss */
.icon-github:before {
  content: "\e609";
}

/* line 32, src/ui/_fonts.scss */
.icon-facebook:before {
  content: "\e60a";
}

/* line 35, src/ui/_fonts.scss */
.icon-linkedin:before {
  content: "\e607";
}

/* line 38, src/ui/_fonts.scss */
.icon-home:before {
  content: "\e600";
}

/* line 41, src/ui/_fonts.scss */
.icon-briefcase:before {
  content: "\e601";
}

/* line 44, src/ui/_fonts.scss */
.icon-mobile:before {
  content: "\e602";
}

/* line 47, src/ui/_fonts.scss */
.icon-mail:before {
  content: "\e603";
}

/* line 50, src/ui/_fonts.scss */
.icon-iOS:before {
  content: "\f179";
}

/* line 53, src/ui/_fonts.scss */
.icon-android:before {
  content: "\f17b";
}

/* line 56, src/ui/_fonts.scss */
.icon-website:before {
  content: "\e9c9";
}

/*------------------------------------*\
    $PAGE
\*------------------------------------*/
/* line 4, src/ui/_buttons.scss */
.btn {
  display: inline-block;
  font-family: "PT Sans Caption", sans-serif;
  padding: 12px 18px;
  text-transform: uppercase;
  text-decoration: none;
  font-size: 18px;
  font-size: 1.125rem;
  line-height: 1.33333;
  -moz-border-radius: 2px;
  -webkit-border-radius: 2px;
  border-radius: 2px;
  -moz-transition: all 0.3s;
  -o-transition: all 0.3s;
  -webkit-transition: all 0.3s;
  transition: all 0.3s;
}
@media only screen and (max-width: 480px) {
  /* line 4, src/ui/_buttons.scss */
  .btn {
    font-size: 14px;
    font-size: 0.875rem;
    line-height: 1.71429;
  }
}

/* line 20, src/ui/_buttons.scss */
.btn-red {
  background: #c94055;
  border: 2px solid #c94055;
  color: #fff;
  letter-spacing: 1px;
  font-weight: 400;
}
/* line 27, src/ui/_buttons.scss */
.btn-red:hover {
  background: none;
  color: #c94055;
}
